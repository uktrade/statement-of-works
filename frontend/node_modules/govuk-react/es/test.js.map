{"version":3,"sources":["../src/test.js"],"names":["fs","path","packageExports","pkg","describe","Object","keys","map","exportName","it","expect","toBe","dirs","p","readdirSync","filter","f","statSync","join","isDirectory","components","__dirname","component","dependencies"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,KAAKC,cAAZ,MAAgC,SAAhC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEAC,QAAQ,CAAC,SAAD,EAAY,YAAM;AACxB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,cAAZ,EAA4BK,GAA5B,CAAgC,UAAAC,UAAU;AAAA,WACxCC,EAAE,CAAID,UAAJ,iBAA4B,YAAM;AAClCE,MAAAA,MAAM,CAAC,CAAC,CAACR,cAAc,CAACM,UAAD,CAAjB,CAAN,CAAqCG,IAArC,CAA0C,IAA1C;AACD,KAFC,CADsC;AAAA,GAA1C;AAKD,CAPO,CAAR,C,CASA;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,CAAC;AAAA,SAAIb,EAAE,CAACc,WAAH,CAAeD,CAAf,EAAkBE,MAAlB,CAAyB,UAAAC,CAAC;AAAA,WAAIhB,EAAE,CAACiB,QAAH,CAAYhB,IAAI,CAACiB,IAAL,CAAUL,CAAV,EAAaG,CAAb,CAAZ,EAA6BG,WAA7B,EAAJ;AAAA,GAA1B,CAAJ;AAAA,CAAd;;AAEAf,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3B;AACA;AACA,MAAMgB,UAAU,GAAGR,IAAI,CAACX,IAAI,CAACiB,IAAL,CAAUG,SAAV,EAAqB,qBAArB,CAAD,CAAvB,CAH2B,CAK3B;AACA;;AACAD,EAAAA,UAAU,CAACb,GAAX,CAAe,UAAAe,SAAS;AAAA,WACtBb,EAAE,mBAAiBa,SAAjB,0BAAiD,YAAM;AACvDZ,MAAAA,MAAM,CAAC,CAAC,CAACP,GAAG,CAACoB,YAAJ,mBAAiCD,SAAjC,CAAH,CAAN,CAAwDX,IAAxD,CAA6D,IAA7D;AACD,KAFC,CADoB;AAAA,GAAxB;AAKD,CAZO,CAAR","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport * as packageExports from './index';\nimport pkg from '../package.json';\n\ndescribe('Exports', () => {\n  // all exports are truthy\n  Object.keys(packageExports).map(exportName =>\n    it(`${exportName} is truthy`, () => {\n      expect(!!packageExports[exportName]).toBe(true);\n    })\n  );\n});\n\n// https://stackoverflow.com/questions/18112204/get-all-directories-within-directory-nodejs?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\nconst dirs = p => fs.readdirSync(p).filter(f => fs.statSync(path.join(p, f)).isDirectory());\n\ndescribe('Components', () => {\n  // all componenents are dependencies of govuk-react\n  // if needed in future, can add an exclusion list/array to this test\n  const components = dirs(path.join(__dirname, '../../../components'));\n\n  // TODO: this fails if a component is deleted/renamed and es/lib/node_modules are left behind.\n  // We either need a clean command that can be run before tests or check the existence of package.json in each component folder.\n  components.map(component =>\n    it(`@govuk-react/${component} is in dependencies`, () => {\n      expect(!!pkg.dependencies[`@govuk-react/${component}`]).toBe(true);\n    })\n  );\n});\n"],"file":"test.js"}