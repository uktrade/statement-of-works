var _styled, _styled2;

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { BLUE, GREY_4, PURPLE, YELLOW, WHITE } from 'govuk-colours';
import { FONT_SIZE, LINE_HEIGHT, SPACING, MEDIA_QUERIES, NTA_LIGHT } from '@govuk-react/constants';
import { ArrowRight as NextPageIcon, ArrowLeft as PrevPageIcon } from '@govuk-react/icons';
var PaginationWrapper = styled('li')((_styled = {
  boxSizing: 'border-box',
  margin: 0,
  padding: 0,
  listStyleType: 'none',
  fontFamily: NTA_LIGHT,
  fontWeight: 400,
  textTransform: 'none',
  fontSize: FONT_SIZE.SIZE_20,
  lineHeight: LINE_HEIGHT.SIZE_16,
  width: '100%'
}, _styled[MEDIA_QUERIES.LARGESCREEN] = {
  fontSize: FONT_SIZE.SIZE_27,
  lineHeight: LINE_HEIGHT.SIZE_16
}, _styled['> a'] = {
  boxSizing: 'border-box',
  color: BLUE,
  fill: 'currentColor',
  padding: SPACING.SCALE_3,
  backgroundColor: WHITE,
  textDecoration: 'none',
  outlineColor: 'transparent',
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  width: '100%',
  ':hover': {
    backgroundColor: GREY_4
  },
  ':focus': {
    outline: "3px solid " + YELLOW
  },
  ':visited': {
    color: PURPLE
  }
}, _styled), function (_ref) {
  var previousPage = _ref.previousPage;
  return {
    marginRight: previousPage ? '3px' : undefined,
    ' > a': {
      alignItems: previousPage ? 'flex-start' : undefined
    },
    ' > a div': {
      justifyContent: previousPage ? 'flex-start' : undefined,
      ' > svg': {
        height: previousPage ? '13px' : undefined,
        width: previousPage ? '17px' : undefined,
        marginRight: previousPage ? '10px' : undefined
      }
    }
  };
}, function (_ref2) {
  var nextPage = _ref2.nextPage;
  return {
    ' > a': {
      alignItems: nextPage ? 'flex-end' : undefined
    },
    ' > a div': {
      justifyContent: nextPage ? 'flex-end' : undefined,
      ' > svg': {
        height: nextPage ? '13px' : undefined,
        width: nextPage ? '17px' : undefined,
        marginLeft: nextPage ? '10px' : undefined
      }
    }
  };
});
var InnerWrap = styled('div')({
  display: 'flex',
  alignItems: 'center',
  width: '100%'
});
var PageTitle = styled('span')((_styled2 = {
  fontSize: FONT_SIZE.SIZE_14,
  lineHeight: LINE_HEIGHT.SIZE_14,
  textDecoration: 'underline'
}, _styled2[MEDIA_QUERIES.LARGESCREEN] = {
  fontSize: FONT_SIZE.SIZE_16,
  lineHeight: LINE_HEIGHT.SIZE_16
}, _styled2));

var asPaginationItem = function asPaginationItem(AnchorType) {
  var PaginationItem = function PaginationItem(props) {
    return React.createElement(PaginationWrapper, {
      previousPage: props.previousPage,
      nextPage: props.nextPage
    }, React.createElement(AnchorType, {
      to: props.to,
      href: props.href,
      target: props.target
    }, React.createElement(InnerWrap, null, props.previousPage && React.createElement(PrevPageIcon, null), props.children, props.nextPage && React.createElement(NextPageIcon, null)), props.pageTitle && React.createElement(PageTitle, null, props.pageTitle)));
  };

  PaginationItem.defaultProps = {
    previousPage: undefined,
    nextPage: undefined,
    pageTitle: undefined,
    to: undefined,
    target: undefined,
    href: undefined
  };
  return PaginationItem;
};

export default asPaginationItem;
//# sourceMappingURL=index.js.map