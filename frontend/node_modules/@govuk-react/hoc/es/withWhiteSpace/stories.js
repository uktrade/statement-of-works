import React from 'react';
import styled from 'styled-components';
import { storiesOf } from '@storybook/react';
import { withKnobs, number, object, text } from '@storybook/addon-knobs/react';
import BackLink from '@govuk-react/back-link';
import Breadcrumbs from '@govuk-react/breadcrumb';
import Button from '@govuk-react/button';
import Checkbox from '@govuk-react/checkbox';
import DateField from '@govuk-react/date-field';
import ErrorText from '@govuk-react/error-text';
import FileUpload from '@govuk-react/file-upload';
import Heading from '@govuk-react/heading';
import HintText from '@govuk-react/hint-text';
import Input from '@govuk-react/input';
import InputField from '@govuk-react/input-field';
import Label from '@govuk-react/label';
import LabelText from '@govuk-react/label-text';
import ListItem from '@govuk-react/list-item';
import ListNavigation from '@govuk-react/list-navigation';
import MultiChoice from '@govuk-react/multi-choice';
import OrderedList from '@govuk-react/ordered-list';
import Pagination from '@govuk-react/pagination';
import Panel from '@govuk-react/panel';
import PhaseBanner from '@govuk-react/phase-banner';
import Radio from '@govuk-react/radio';
import RelatedItems from '@govuk-react/related-items';
import SearchBox from '@govuk-react/search-box';
import Select from '@govuk-react/select';
import Tag from '@govuk-react/tag';
import TextArea from '@govuk-react/text-area';
import UnorderedList from '@govuk-react/unordered-list';
import withWhiteSpace from '.';
var stories = storiesOf('Utilities/withWhiteSpace', module);
stories.addDecorator(withKnobs);
var DemoComponent = withWhiteSpace()(styled('div')({
  border: '2px solid red'
}));
stories.add('demo component, simple single margins and padding', function () {
  return React.createElement("div", null, React.createElement(DemoComponent, {
    margin: number('margin', 2, {
      range: true,
      min: -9,
      max: 9
    }),
    padding: number('padding', 2, {
      range: true,
      min: 0,
      max: 9
    })
  }, "Component with styles - use knobs to adjust"), React.createElement(DemoComponent, null, "Component without styles"));
});
stories.add('demo component, single margins and padding (complex)', function () {
  return React.createElement("div", null, React.createElement(DemoComponent // Use knobs for children content to kick knobs to life - storybook bug work-around
  // eslint-disable-next-line react/no-children-prop
  , {
    children: text('content', 'Component with styles - use knobs to adjust'),
    margin: {
      size: number('margin.size', 2, {
        range: true,
        min: -9,
        max: 9
      }),
      direction: text('margin.direction', 'all'),
      adjustment: number('margin.adjustment', undefined)
    },
    padding: {
      size: number('padding.size', 2, {
        range: true,
        min: 0,
        max: 9
      }),
      direction: text('padding.direction', 'all'),
      adjustment: number('padding.adjustment', undefined)
    }
  }), React.createElement(DemoComponent, null, "Component without styles"));
});
stories.add('demo component, multiple margins and padding (complex)', function () {
  return React.createElement("div", null, React.createElement(DemoComponent, {
    margin: [number('margin (all)', 2, {
      range: true,
      min: -9,
      max: 9
    }), object('margin (first object)', {
      size: 2,
      direction: 'bottom',
      adjustment: -5
    })],
    padding: [number('padding (all)', 2, {
      range: true,
      min: 0,
      max: 9
    }), object('padding (first object)', {
      size: 4,
      direction: ['top', 'bottom'],
      adjustment: 11
    })]
  }, "Component with styles - use knobs to adjust"), React.createElement(DemoComponent, null, "Component without styles"));
});
stories.add('existing InputField with spacing size 1', function () {
  return React.createElement("div", null, React.createElement(InputField, {
    mb: number('marginBottom', 1),
    name: "group1",
    hint: "Change whitespace value with knobs"
  }, "Example 1"), React.createElement(Button, null, "Finish"));
});
stories.add('existing InputField with various spacing sizes', function () {
  return React.createElement("div", null, React.createElement(InputField, {
    mb: number('marginBottom1', 1),
    name: "group1",
    hint: "hi"
  }, "Example 1"), React.createElement(InputField, {
    mb: number('marginBottom2', 4),
    name: "group1",
    hint: "hi"
  }, "Example 2"), React.createElement(InputField, {
    mb: number('marginBottom3', 7),
    name: "group1",
    hint: "hi"
  }, "Example 3"), React.createElement(InputField, {
    mb: number('marginBottom4', 9),
    name: "group1",
    hint: "okay"
  }, "Example 4"), React.createElement(Button, null, "Finish"));
});
stories.add('multiple existing components', function () {
  return React.createElement("div", null, React.createElement(BackLink, {
    mb: number('BackLink marginBottom', 9)
  }, "Example"), React.createElement(Breadcrumbs, {
    mb: number('Breadcrumbs marginBottom', 9)
  }, "Example"), React.createElement(Button, {
    mb: number('Button marginBottom', 9)
  }, "Example"), React.createElement(Checkbox, {
    mb: number('Checkbox marginBottom', 9)
  }, "Example"), React.createElement(DateField, {
    mb: number('DateField marginBottom', 9)
  }, "Example"), React.createElement(ErrorText, {
    mb: number('ErrorText marginBottom', 9)
  }, "Example"), React.createElement(FileUpload, {
    mb: number('File Upload marginBottom', 9)
  }, "Example"), React.createElement(Heading, {
    mb: number('Heading marginBottom', 9)
  }, "Example"), React.createElement(HintText, {
    mb: number('HintText marginBottom', 9)
  }, "Example"), React.createElement(Input, {
    mb: number('Input marginBottom', 9)
  }), React.createElement(InputField, {
    mb: number('Input-text marginBottom', 9)
  }, "Example"), React.createElement(Label, {
    mb: number('Label marginBottom', 9)
  }, "Label Example"), React.createElement(LabelText, {
    mb: number('LabelText marginBottom', 9)
  }, "LabelText Example"), React.createElement(ListItem, {
    mb: number('ListItem marginBottom', 9)
  }, "ListItem Example"), React.createElement(ListNavigation, {
    mb: number('ListNavigation marginBottom', 9)
  }, "ListNavigation Example"), React.createElement(MultiChoice, {
    label: "example",
    mb: number('MultiChoice marginBottom', 9)
  }, "MultiChoice Example"), React.createElement(OrderedList, {
    mb: number('OrderedList marginBottom', 9)
  }, "OrderedList Example"), React.createElement(Pagination, {
    mb: number('Pagination marginBottom', 9)
  }, "Pagination Example"), React.createElement(Panel, {
    panelTitle: "Example",
    mb: number('Panel marginBottom', 9)
  }, "Panel Example"), React.createElement(PhaseBanner, {
    level: "EXAMPLE",
    mb: number('PhaseBanner marginBottom', 9)
  }, "PhaseBanner Example"), React.createElement(Radio, {
    mb: number('Radio marginBottom', 9)
  }, "Radio Example"), React.createElement(RelatedItems, {
    mb: number('RelatedItems marginBottom', 9)
  }, "RelatedItems Example"), React.createElement(SearchBox, {
    mb: number('SearchBox marginBottom', 9)
  }, "SearchBox Example"), React.createElement(Select, {
    label: "example",
    mb: number('Select marginBottom', 9)
  }, "Select Example"), React.createElement(Tag, {
    mb: number('Tag marginBottom', 9)
  }, "Tag"), React.createElement(TextArea, {
    mb: number('TextArea marginBottom', 9)
  }, "TextArea Example"), React.createElement(UnorderedList, {
    mb: number('UnorderedList marginBottom', 9)
  }, "UnorderedList Example"));
});
//# sourceMappingURL=stories.js.map