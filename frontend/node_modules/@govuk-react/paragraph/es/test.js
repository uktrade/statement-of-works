import React from 'react';
import { MemoryRouter, Link } from 'react-router-dom';
import { mount } from 'enzyme';
import PropTypes from 'prop-types';
import Paragraph, { exampleCodeBlock } from './fixtures';

var ReactRouterLinkRenderer = function ReactRouterLinkRenderer(_ref) {
  var href = _ref.href,
      children = _ref.children;
  return href.match(/^\//) ? React.createElement(Link, {
    to: href
  }, children) : React.createElement("a", {
    href: href
  }, children);
};

describe('Paragraph', function () {
  var examplePlain = 'Some basic text';
  var exampleInlineCode = '`Some inline code example`';
  var exampleEmphasis = '*Some emphasis example*';
  var exampleStrong = '**Some strong/bold example**';
  var exampleInternalLink = '[link text](/some_link)';
  var exampleExternalLink = '[link text](http://google.com)';
  var wrapper;
  it('renders a paragraph element', function () {
    wrapper = mount(React.createElement(Paragraph, null, examplePlain));
    expect(wrapper.find('p')).toHaveLength(1);
  });
  it('renders a inline code block', function () {
    wrapper = mount(React.createElement(Paragraph, null, exampleInlineCode));
    expect(wrapper.find('code')).toHaveLength(1);
  });
  it('renders a code block', function () {
    wrapper = mount(React.createElement(Paragraph, null, exampleCodeBlock));
    expect(wrapper.find('pre')).toHaveLength(1);
  });
  it('renders emphasis text', function () {
    wrapper = mount(React.createElement(Paragraph, null, exampleEmphasis));
    expect(wrapper.find('em')).toHaveLength(1);
  });
  it('renders strong text', function () {
    wrapper = mount(React.createElement(Paragraph, null, exampleStrong));
    expect(wrapper.find('strong')).toHaveLength(1);
  });
  it('renders react router links with custom renderer', function () {
    wrapper = mount(React.createElement(MemoryRouter, null, React.createElement(Paragraph, {
      linkRenderer: ReactRouterLinkRenderer
    }, exampleInternalLink)));
    expect(wrapper.find('a')).toHaveLength(1);
  });
  it('renders internal links as anchors', function () {
    wrapper = mount(React.createElement(MemoryRouter, null, React.createElement(Paragraph, null, exampleInternalLink)));
    expect(wrapper.find('a')).toHaveLength(1);
  });
  it('renders external links as anchors', function () {
    wrapper = mount(React.createElement(Paragraph, null, exampleExternalLink));
    expect(wrapper.find('a')).toHaveLength(1);
  });
  it('renders full example text from fixtures', function () {
    wrapper = mount(React.createElement(Paragraph, null, examplePlain));
  });
  it('renders as supporting text', function () {
    wrapper = mount(React.createElement(Paragraph, {
      supportingText: true
    }, examplePlain));
    expect(wrapper.prop('supportingText')).toBe(true);
  });
  it('matches wrapper snapshot', function () {
    expect(wrapper).toMatchSnapshot();
  });
});
//# sourceMappingURL=test.js.map