{"version":3,"sources":["../src/test.js"],"names":["React","MemoryRouter","Link","mount","PropTypes","Paragraph","exampleCodeBlock","ReactRouterLinkRenderer","href","children","match","describe","examplePlain","exampleInlineCode","exampleEmphasis","exampleStrong","exampleInternalLink","exampleExternalLink","wrapper","it","expect","find","toHaveLength","prop","toBe","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MemoryRouter, Link } from 'react-router-dom';\nimport { mount } from 'enzyme';\nimport PropTypes from 'prop-types';\n\nimport Paragraph, { exampleCodeBlock } from './fixtures';\n\nconst ReactRouterLinkRenderer = ({ href, children }) =>\n  href.match(/^\\//) ? <Link to={href}>{children}</Link> : <a href={href}>{children}</a>;\n\nReactRouterLinkRenderer.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\ndescribe('Paragraph', () => {\n  const examplePlain = 'Some basic text';\n  const exampleInlineCode = '`Some inline code example`';\n  const exampleEmphasis = '*Some emphasis example*';\n  const exampleStrong = '**Some strong/bold example**';\n  const exampleInternalLink = '[link text](/some_link)';\n  const exampleExternalLink = '[link text](http://google.com)';\n  let wrapper;\n\n  it('renders a paragraph element', () => {\n    wrapper = mount(<Paragraph>{examplePlain}</Paragraph>);\n    expect(wrapper.find('p')).toHaveLength(1);\n  });\n\n  it('renders a inline code block', () => {\n    wrapper = mount(<Paragraph>{exampleInlineCode}</Paragraph>);\n    expect(wrapper.find('code')).toHaveLength(1);\n  });\n\n  it('renders a code block', () => {\n    wrapper = mount(<Paragraph>{exampleCodeBlock}</Paragraph>);\n    expect(wrapper.find('pre')).toHaveLength(1);\n  });\n\n  it('renders emphasis text', () => {\n    wrapper = mount(<Paragraph>{exampleEmphasis}</Paragraph>);\n    expect(wrapper.find('em')).toHaveLength(1);\n  });\n\n  it('renders strong text', () => {\n    wrapper = mount(<Paragraph>{exampleStrong}</Paragraph>);\n    expect(wrapper.find('strong')).toHaveLength(1);\n  });\n\n  it('renders react router links with custom renderer', () => {\n    wrapper = mount(\n      <MemoryRouter>\n        <Paragraph linkRenderer={ReactRouterLinkRenderer}>{exampleInternalLink}</Paragraph>\n      </MemoryRouter>\n    );\n    expect(wrapper.find('a')).toHaveLength(1);\n  });\n\n  it('renders internal links as anchors', () => {\n    wrapper = mount(\n      <MemoryRouter>\n        <Paragraph>{exampleInternalLink}</Paragraph>\n      </MemoryRouter>\n    );\n    expect(wrapper.find('a')).toHaveLength(1);\n  });\n\n  it('renders external links as anchors', () => {\n    wrapper = mount(<Paragraph>{exampleExternalLink}</Paragraph>);\n    expect(wrapper.find('a')).toHaveLength(1);\n  });\n\n  it('renders full example text from fixtures', () => {\n    wrapper = mount(<Paragraph>{examplePlain}</Paragraph>);\n  });\n\n  it('renders as supporting text', () => {\n    wrapper = mount(<Paragraph supportingText>{examplePlain}</Paragraph>);\n    expect(wrapper.prop('supportingText')).toBe(true);\n  });\n\n  it('matches wrapper snapshot', () => {\n    expect(wrapper).toMatchSnapshot();\n  });\n});\n"],"file":"test.js"}