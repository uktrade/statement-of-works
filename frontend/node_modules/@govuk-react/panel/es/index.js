var _styled;

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { TURQUOISE, WHITE } from 'govuk-colours';
import { spacing, typography } from '@govuk-react/lib';
import { BORDER_WIDTH, MEDIA_QUERIES, SPACING_POINTS } from '@govuk-react/constants';
import { stripUnit } from 'polished';
var RAW_BORDER_WIDTH = stripUnit(BORDER_WIDTH);
var StyledPanel = styled('div')(typography.font({
  size: 19
}), (_styled = {
  boxSizing: 'border-box',
  marginBottom: SPACING_POINTS[3],
  // NB govuk-frontend has this element styled tablet-first
  padding: SPACING_POINTS[6] - RAW_BORDER_WIDTH,
  border: BORDER_WIDTH + " solid transparent",
  textAlign: 'center'
}, _styled[MEDIA_QUERIES.TABLET] = {
  padding: SPACING_POINTS[7] - RAW_BORDER_WIDTH
}, _styled.color = WHITE, _styled.background = TURQUOISE, _styled), spacing.withWhiteSpace()); // NB govuk-frontend allows for the headingLevel to change, but defaults to h1
// we're not supporting headingLevel at this time

var StyledTitle = styled('h1')({
  marginTop: 0,
  marginBottom: SPACING_POINTS[6],
  ':last-child': {
    marginBottom: 0
  }
}, typography.font({
  size: 48,
  weight: 'bold'
}));
var StyledBody = styled('div')(typography.font({
  size: 36
}));
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * <Panel title="Application complete" />
 * ```
 *
 * Panel with header and HTML body
 * ```jsx
 * <Panel title="Application complete">
 *   Your reference number<br />
 *   <strong>HDJ2123F</strong>
 * </Panel>
 * ```
 *
 * ### References:
 * - https://github.com/alphagov/govuk-frontend/tree/master/src/components/panel
 *
 */

var Panel = function Panel(_ref) {
  var title = _ref.title,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["title", "children"]);

  return React.createElement(StyledPanel, props, React.createElement(StyledTitle, null, title), children && React.createElement(StyledBody, null, children));
};

Panel.defaultProps = {
  children: undefined
};
export default Panel;
//# sourceMappingURL=index.js.map