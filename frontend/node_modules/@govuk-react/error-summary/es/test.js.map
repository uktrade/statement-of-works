{"version":3,"sources":["../src/test.js"],"names":["React","ReactDOM","mount","ErrorSummary","ErrorSummaryExample","heading","description","errors","describe","wrapperErrorSummary","it","div","document","createElement","render","skip","expect","find","exists","toBe","length","toEqual","text","forEach","listItem","index","mockOnHandleErrorClickCallback","jest","fn","ErrorSummaryClick","wrapperErrorSummaryClickMock","timesClicked","simulate","mock","calls","wrapper","anchor","first","props","onClick","toBeInstanceOf","Function","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { mount } from 'enzyme';\n\nimport ErrorSummary from '.';\nimport ErrorSummaryExample, { heading, description, errors } from './fixtures';\n\ndescribe('error summary', () => {\n  const wrapperErrorSummary = mount(<ErrorSummaryExample />);\n\n  it('renders without crashing', () => {\n    const div = document.createElement('div');\n    ReactDOM.render(<ErrorSummaryExample />, div);\n  });\n\n  // TODO These tests are fragile, test implementation details, and each test should render...\n  // They should be replaced with a different approach, probably using react-testing-library\n  // Some tests have been disabled\n\n  it.skip('should render the ErrorSummary component', () => {\n    expect(wrapperErrorSummary.find('Heading').exists()).toBe(true);\n    expect(wrapperErrorSummary.find('Paragraph').exists()).toBe(true);\n    // NB This fails with latest UnorderedList, and is testing implement\n    expect(wrapperErrorSummary.find('UnorderedList').exists()).toBe(true);\n    expect(wrapperErrorSummary.find('UnorderedList').find('ListItem').length).toEqual(errors.length);\n  });\n\n  it('should render the heading', () => {\n    expect(wrapperErrorSummary.find('Heading').text()).toEqual(heading);\n  });\n\n  it('should render the optional description', () => {\n    expect(wrapperErrorSummary.find('Paragraph').text()).toEqual(description);\n  });\n\n  it.skip('should render the list of errors', () => {\n    wrapperErrorSummary\n      .find('UnorderedList')\n      .find('ListItem')\n      .forEach((listItem, index) => {\n        expect(listItem.text()).toEqual(errors[index].text);\n      });\n  });\n\n  it.skip('should click on the error', () => {\n    const mockOnHandleErrorClickCallback = jest.fn();\n\n    const ErrorSummaryClick = () => (\n      <ErrorSummary\n        heading={heading}\n        description={description}\n        onHandleErrorClick={mockOnHandleErrorClickCallback}\n        errors={errors}\n      />\n    );\n\n    const wrapperErrorSummaryClickMock = mount(<ErrorSummaryClick />);\n\n    let timesClicked = 0;\n\n    wrapperErrorSummaryClickMock\n      .find('UnorderedList')\n      .find('ListItem')\n      .forEach(listItem => {\n        listItem.find('Anchor').simulate('click');\n        timesClicked += 1;\n        expect(mockOnHandleErrorClickCallback.mock.calls.length).toBe(timesClicked);\n      });\n  });\n\n  it.skip('renders with defaultProps', () => {\n    const wrapper = mount(<ErrorSummary heading={heading} errors={errors} />);\n    const anchor = wrapper.find('Anchor').first();\n    expect(anchor.props().onClick).toBeInstanceOf(Function);\n    anchor.simulate('click');\n  });\n\n  it('matches the ErrorSummary snapshot', () => {\n    expect(wrapperErrorSummary).toMatchSnapshot('error summary');\n  });\n\n  it('defaults the heading to \"There is a problem\" if not set', () => {\n    const wrapper = mount(<ErrorSummary errors={errors} />);\n    expect(wrapper.find('Heading').text()).toEqual('There is a problem');\n  });\n});\n"],"file":"test.js"}