{"version":3,"sources":["../src/index.js"],"names":["React","PropTypes","styled","FOCUS_COLOUR","spacing","typography","HintText","BORDER_WIDTH_FORM_ELEMENT","FOCUS_WIDTH","FOCUS_WIDTH_RAW","MEDIA_QUERIES","SPACING_POINTS","radioSize","labelPaddingLeftRight","RADIOS_FOCUS_WIDTH","Label","font","size","display","position","minHeight","padding","clear","inline","LARGESCREEN","float","marginRight","withWhiteSpace","marginBottom","Input","zIndex","top","left","width","height","cursor","opacity","outline","outlineOffset","boxShadow","disabled","pointerEvents","LabelText","MsTouchAction","touchAction","content","boxSizing","border","borderRadius","background","StyledRadioHint","paddingLeft","paddingRight","Radio","children","className","hint","input","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FOCUS_COLOUR } from 'govuk-colours';\nimport { spacing, typography } from '@govuk-react/lib';\nimport HintText from '@govuk-react/hint-text';\nimport {\n  BORDER_WIDTH_FORM_ELEMENT,\n  FOCUS_WIDTH,\n  FOCUS_WIDTH_RAW,\n  MEDIA_QUERIES,\n  SPACING_POINTS,\n} from '@govuk-react/constants';\n\nconst radioSize = SPACING_POINTS[7];\nconst labelPaddingLeftRight = SPACING_POINTS[3];\n// When the default focus width is used on a curved edge it looks visually smaller.\n// So for the circular radios we bump the default to make it look visually consistent.\nconst RADIOS_FOCUS_WIDTH = `${FOCUS_WIDTH_RAW + 1}px`;\n\nconst Label = styled('label')(\n  typography.font({ size: 19 }),\n  {\n    display: 'block',\n    position: 'relative',\n    minHeight: radioSize,\n    padding: `0 0 0 ${radioSize}px`,\n    clear: 'left',\n  },\n  ({ inline }) =>\n    inline && {\n      [MEDIA_QUERIES.LARGESCREEN]: {\n        float: 'left',\n        clear: 'none',\n        marginRight: SPACING_POINTS[4],\n      },\n    },\n  spacing.withWhiteSpace({ marginBottom: 2 })\n);\n\nconst Input = styled('input')(\n  {\n    position: 'absolute',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    width: radioSize,\n    height: radioSize,\n    cursor: 'pointer',\n    opacity: 0,\n    ':checked + span::after': {\n      opacity: 1,\n    },\n    ':focus + span::before': {\n      outline: `${FOCUS_WIDTH} solid transparent`,\n      outlineOffset: FOCUS_WIDTH,\n      boxShadow: `0 0 0 ${RADIOS_FOCUS_WIDTH} ${FOCUS_COLOUR}`,\n    },\n  },\n  ({ disabled }) => ({\n    cursor: disabled ? 'auto' : 'pointer',\n    ' + span': {\n      opacity: disabled ? '.5' : '1',\n      pointerEvents: disabled ? 'none' : 'auto',\n    },\n  })\n);\n\nconst LabelText = styled('span')({\n  display: 'inline-block',\n  marginBottom: 0,\n  padding: `8px ${labelPaddingLeftRight}px ${SPACING_POINTS[1]}px`,\n  cursor: 'pointer',\n  MsTouchAction: 'manipulation',\n  touchAction: 'manipulation',\n  ':before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: radioSize,\n    height: radioSize,\n    border: `${BORDER_WIDTH_FORM_ELEMENT} solid black`,\n    borderRadius: '50%',\n    background: 'transparent',\n  },\n  ':after': {\n    content: \"''\",\n    position: 'absolute',\n    top: SPACING_POINTS[2],\n    left: SPACING_POINTS[2],\n    width: 0,\n    height: 0,\n    border: `${SPACING_POINTS[2]}px solid`,\n    borderRadius: '50%',\n    opacity: 0,\n  },\n});\n\nconst StyledRadioHint = styled(HintText)({\n  display: 'block',\n  paddingLeft: labelPaddingLeftRight,\n  paddingRight: labelPaddingLeftRight,\n});\n\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * <Radio name=\"group1\">Radio button text example</Radio>\n * ```\n *\n * Radio stacked\n * ```jsx\n *  <div>\n *    <Radio name=\"group1\">Waste from animal carcasses</Radio>\n *    <Radio name=\"group1\">Waste from mines or quarries</Radio>\n *    <Radio name=\"group1\">Farm or agricultural waste</Radio>\n *  </div>\n * ```\n *\n * Radio inline\n * ```jsx\n *  <div>\n *    <Radio name=\"group1\" inline>\n *      Yes\n *    </Radio>\n *    <Radio name=\"group1\" inline>\n *      No\n *    </Radio>\n *  </div>\n * ```\n *\n * Radio disabled\n * ```jsx\n *  <div>\n *    <Radio name=\"group1\" disabled=\"disabled\">\n *      Disabled checkbox option\n *    </Radio>\n *  </div>\n *  ```\n *\n * Radio preselected\n * ```jsx\n *  <div>\n *    <Radio name=\"group1\" checked>\n *      Farm or agricultural waste\n *    </Radio>\n *  </div>\n * ```\n *\n * Radio preselected & disabled\n * ```jsx\n *  <div>\n *    <Radio name=\"group1\" disabled=\"disabled\" checked>\n *      Farm or agricultural waste\n *    </Radio>\n *  </div>\n * ```\n * Radio with hint text\n * ```jsx\n * <div>\n *   <Radio\n *    name=\"group1\"\n *    hint=\"You'll have a user ID if you've registered for Self Assessment or filed a tax return\n *          online before.\"\n *   >\n *     Sign in with Government Gateway\n *   </Radio>\n * </div>\n * ```\n * ### References:\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/components/radios/_radios.scss\n * - https://github.com/alphagov/govuk_elements/blob/master/assets/sass/elements/_forms.scss\n */\nconst Radio = ({ inline, children, className, hint, ...input }) => (\n  <Label inline={inline} className={className}>\n    <Input type=\"radio\" {...input} />\n    <LabelText>{children}</LabelText>\n    {hint && <StyledRadioHint>{hint}</StyledRadioHint>}\n  </Label>\n);\n\nRadio.defaultProps = {\n  hint: undefined,\n  inline: false,\n  className: undefined,\n};\n\nRadio.propTypes = {\n  hint: PropTypes.node,\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Radio;\n"],"file":"index.js"}