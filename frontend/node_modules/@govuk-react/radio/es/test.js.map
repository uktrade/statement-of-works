{"version":3,"sources":["../src/test.js"],"names":["React","ReactDOM","mount","Radio","describe","props","example","wrapper","wrapperInline","beforeEach","name","children","it","div","document","createElement","render","expect","toBe","toMatchSnapshot"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,QAAsB,QAAtB;AAEA,OAAOC,KAAP,MAAkB,GAAlB;AAEAC,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtB,MAAIC,KAAJ;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,OAAO,GAAG,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED;AAAb,KAAuBA,OAAvB,CAAhB;AAEA,MAAME,aAAa,GACjB,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,IAAI,EAAEF;AAApB,KACGA,OADH,CADF;AAMAG,EAAAA,UAAU,CAAC,YAAM;AACfJ,IAAAA,KAAK,GAAG;AACNK,MAAAA,IAAI,EAAEJ,OADA;AAENK,MAAAA,QAAQ,EAAEL;AAFJ,KAAR;AAID,GALS,CAAV;AAOAM,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnC,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAd,IAAAA,QAAQ,CAACe,MAAT,CAAgBT,OAAhB,EAAyBM,GAAzB;AACD,GAHC,CAAF;AAKAD,EAAAA,EAAE,CAAC,iEAAD,EAAoE,YAAM;AAC1EK,IAAAA,MAAM,CAACV,OAAO,CAACF,KAAR,CAAcK,IAAf,CAAN,CAA2BQ,IAA3B,CAAgCb,KAAK,CAACK,IAAtC;AACAO,IAAAA,MAAM,CAACV,OAAO,CAACF,KAAR,CAAcM,QAAf,CAAN,CAA+BO,IAA/B,CAAoCb,KAAK,CAACM,QAA1C;AACD,GAHC,CAAF;AAKAC,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAC3BK,IAAAA,MAAM,CAACf,KAAK,CAACK,OAAD,CAAN,CAAN,CAAuBY,eAAvB,CAAuC,gBAAvC;AACD,GAFC,CAAF;AAIAP,EAAAA,EAAE,CAAC,UAAD,EAAa,YAAM;AACnBK,IAAAA,MAAM,CAACf,KAAK,CAAC,oBAAC,KAAD;AAAO,MAAA,QAAQ;AAAf,iBAAD,CAAN,CAAN,CAA+CiB,eAA/C,CAA+D,UAA/D;AACD,GAFC,CAAF;AAIAP,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtCK,IAAAA,MAAM,CAACf,KAAK,CAACM,aAAD,CAAN,CAAN,CAA6BW,eAA7B,CAA6C,cAA7C;AACD,GAFC,CAAF;AAIAP,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpCK,IAAAA,MAAM,CAACf,KAAK,CAAC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ,gCAAD,CAAN,CAAN,CAAsEiB,eAAtE,CAAsF,WAAtF;AACD,GAFC,CAAF;AAGD,CA5CO,CAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { mount } from 'enzyme';\n\nimport Radio from '.';\n\ndescribe('Radio', () => {\n  let props;\n  const example = 'example';\n\n  const wrapper = <Radio name={example}>{example}</Radio>;\n\n  const wrapperInline = (\n    <Radio inline name={example}>\n      {example}\n    </Radio>\n  );\n\n  beforeEach(() => {\n    props = {\n      name: example,\n      children: example,\n    };\n  });\n\n  it('renders without crashing', () => {\n    const div = document.createElement('div');\n    ReactDOM.render(wrapper, div);\n  });\n\n  it('passes `props.children` to the rendered `wrapper` as `children`', () => {\n    expect(wrapper.props.name).toBe(props.name);\n    expect(wrapper.props.children).toBe(props.children);\n  });\n\n  it('matches snapshot', () => {\n    expect(mount(wrapper)).toMatchSnapshot('standard mount');\n  });\n\n  it('disabled', () => {\n    expect(mount(<Radio disabled>Example</Radio>)).toMatchSnapshot('disabled');\n  });\n\n  it('matches snapshot for inline', () => {\n    expect(mount(wrapperInline)).toMatchSnapshot('inline mount');\n  });\n\n  it('can render with hint text', () => {\n    expect(mount(<Radio hint=\"Hint text\">Example with hint text</Radio>)).toMatchSnapshot('hint text');\n  });\n});\n"],"file":"test.js"}