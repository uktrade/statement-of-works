import React from 'react';
import ReactDOM from 'react-dom';
import { mount } from 'enzyme';
import Textarea from '.';
describe('Textarea', function () {
  var props;
  var example = 'example';
  var meta = {
    touched: true,
    error: example
  };
  var wrapper = React.createElement(Textarea, null, example);
  var wrapperErrorText = React.createElement(Textarea, {
    errorText: example,
    meta: meta
  }, example);
  var wrapperHint = React.createElement(Textarea, {
    hint: example
  }, example);
  beforeEach(function () {
    props = {
      children: example
    };
  });
  it('renders without crashing', function () {
    var div = document.createElement('div');
    ReactDOM.render(wrapper, div);
  });
  it('passes `props.children` to the rendered `wrapper` as `children`', function () {
    expect(wrapper.props.children).toBe(props.children);
  });
  it('matches wrapper snapshot', function () {
    expect(mount(wrapper)).toMatchSnapshot('wrapper mount');
  });
  it('matches snapshot for error', function () {
    expect(mount(wrapperErrorText)).toMatchSnapshot('wrapperErrorText mount');
  });
  it('matches snapshot for hint', function () {
    expect(mount(wrapperHint)).toMatchSnapshot('wrapperHint mount');
  });
});
//# sourceMappingURL=test.js.map