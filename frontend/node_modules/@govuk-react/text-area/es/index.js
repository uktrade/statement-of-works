var _styled;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// https://github.com/alphagov/govuk-frontend/tree/master/src/components/textarea
import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { BLACK, YELLOW, ERROR_COLOUR } from 'govuk-colours';
import { FONT_SIZE, LINE_HEIGHT, MEDIA_QUERIES, NTA_LIGHT } from '@govuk-react/constants';
import Label from '@govuk-react/label';
import LabelText from '@govuk-react/label-text';
import ErrorText from '@govuk-react/error-text';
import HintText from '@govuk-react/hint-text';
var TextAreaField = styled('textarea')((_styled = {
  boxSizing: 'border-box',
  fontFamily: NTA_LIGHT,
  fontWeight: 400,
  textTransform: 'none',
  fontSize: FONT_SIZE.SIZE_16,
  lineHeight: LINE_HEIGHT.SIZE_16
}, _styled[MEDIA_QUERIES.LARGESCREEN] = {
  fontSize: FONT_SIZE.SIZE_19,
  lineHeight: LINE_HEIGHT.SIZE_19,
  width: '75%'
}, _styled.width = '100%', _styled.padding = '5px 4px 4px', _styled.border = "2px solid " + BLACK, _styled[':focus'] = {
  outline: "3px solid " + YELLOW,
  outlineOffset: 0
}, _styled), function (_ref) {
  var error = _ref.error;
  return {
    border: error ? "4px solid " + ERROR_COLOUR : undefined
  };
});
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * <TextArea name="group1">Description of what you saw</TextArea>
 * ```
 *
 * TextArea with hint text
 * ```jsx
 * <TextArea name="group1" hint={['Enter as many words as you like']}>
 *   Description of what you saw
 * </TextArea>
 * ```
 *
 * TextArea with hint text & error
 * ```jsx
 * const meta = {
 *   touched: true,
 *   error: 'Example',
 * };
 *
 * <TextArea
 *    name="group1"
 *    hint={['Enter as many words as you like']}
 *    meta={meta}
 *  >
 *    Description of what you saw
 *  </TextArea>
 * ```
 *
 * ### References:
 * - https://github.com/alphagov/govuk-frontend/tree/master/src/components/textarea
 *
 */

var TextArea = function TextArea(_ref2) {
  var children = _ref2.children,
      hint = _ref2.hint,
      meta = _ref2.meta,
      input = _ref2.input,
      props = _objectWithoutPropertiesLoose(_ref2, ["children", "hint", "meta", "input"]);

  return React.createElement(Label, _extends({
    error: meta.touched && meta.error
  }, props), React.createElement(LabelText, null, children), hint && React.createElement(HintText, null, hint), meta.touched && meta.error && React.createElement(ErrorText, null, meta.error), React.createElement(TextAreaField, _extends({
    type: "text",
    rows: "5",
    error: meta.touched && meta.error
  }, input)));
};

TextArea.defaultProps = {
  hint: undefined,
  input: {},
  meta: {}
};

/** Component is not exported withWhitespace because Label
 *  is also exported withWhitespace and therefore takes precedence.
 */
export default TextArea;
export { TextAreaField };
//# sourceMappingURL=index.js.map