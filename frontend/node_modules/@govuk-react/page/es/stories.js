var _styled;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { storiesOf } from '@storybook/react';
import { withDocsCustom } from '@govuk-react/storybook-components';
import BackLink from '@govuk-react/back-link';
import { H1, H3 } from '@govuk-react/heading';
import { MEDIA_QUERIES, GUTTER } from '@govuk-react/constants';
import ReadMe from '../README.md';
import Page from '.';
var stories = storiesOf('Layout/Page', module);
var examples = storiesOf('Layout/Page/Examples', module);
stories.addDecorator(withDocsCustom(ReadMe));
stories.add('Component default', function () {
  return React.createElement("div", null, React.createElement(Page, {
    beforeChildren: React.createElement(BackLink, {
      href: "#"
    })
  }, React.createElement(H1, null, "Page Title")));
});
var WideContainer = styled(Page.WidthContainer)((_styled = {
  maxWidth: 'inherit'
}, _styled[MEDIA_QUERIES.MAX] = {
  margin: "0 " + GUTTER
}, _styled));
examples.add('Custom width container (no width limit)', function () {
  return React.createElement("div", null, React.createElement(Page, {
    container: WideContainer
  }, React.createElement(H3, null, "Page container has no maxWidth")));
});
var MainContainer = styled(Page.Main)({
  backgroundColor: '#ddd'
});
examples.add('Custom main container (background colour)', function () {
  return React.createElement("div", null, React.createElement(Page, {
    main: MainContainer
  }, React.createElement(H3, null, "Main container with custom background colour")));
});
examples.add('Custom main container (adjusted padding)', function () {
  return React.createElement("div", null, React.createElement(Page, {
    main: function main(props) {
      return React.createElement(Page.Main, _extends({
        padding: {
          size: 1
        }
      }, props));
    }
  }, React.createElement(H3, null, "Main container with adjusted padding using withWhiteSpace padding prop")));
});
//# sourceMappingURL=stories.js.map