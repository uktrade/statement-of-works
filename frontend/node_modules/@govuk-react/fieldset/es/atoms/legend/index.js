function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { spacing, typography } from '@govuk-react/lib';
import { HEADING_SIZES, SPACING_POINTS, TYPOGRAPHY_SCALE } from '@govuk-react/constants';
var StyledLegend = styled('legend')(spacing.withWhiteSpace(), typography.font({
  size: 19
}), typography.textColour, {
  boxSizing: 'border-box',
  display: 'table',
  maxWidth: '100%',
  marginBottom: SPACING_POINTS[2],
  padding: 0,
  // Disabling this as per https://github.com/alphagov/govuk-frontend/issues/1239
  // overflow: 'hidden',
  whiteSpace: 'normal'
}, function (_ref) {
  var size = _ref.size;
  var actualSize = Number.isNaN(Number(size)) ? HEADING_SIZES[size] : size;

  if (size !== undefined && !actualSize) {
    throw Error("Unknown size " + size + " used for legend.");
  }

  if (!actualSize) {
    return undefined;
  }

  return Object.assign({}, typography.font({
    size: actualSize,
    weight: 'bold'
  }), actualSize > 19 ? {
    marginBottom: SPACING_POINTS[3]
  } : undefined);
});
var StyledHeading = styled('h1')({
  margin: 0,
  fontSize: 'inherit',
  fontWeight: 'inherit'
}); // // When the legend contains an H1, we want the H1 to inherit all styles from
// // the legend. Effectively we want to be able to treat the heading as if it is
// // not there.
// .govuk-fieldset__heading {
//   margin: 0;
//   font-size: inherit;
//   font-weight: inherit;
// }

var Legend = function Legend(_ref2) {
  var children = _ref2.children,
      isPageHeading = _ref2.isPageHeading,
      props = _objectWithoutPropertiesLoose(_ref2, ["children", "isPageHeading"]);

  return React.createElement(StyledLegend, props, isPageHeading ? React.createElement(StyledHeading, null, children) : children);
};

Legend.defaultProps = {
  isPageHeading: false,
  size: undefined
};
export default Legend;
//# sourceMappingURL=index.js.map