{"version":3,"sources":["../src/index.js"],"names":["React","PropTypes","UnorderedList","ListItem","ListNavigation","children","listStyleType","props","length","map","child","i","key","defaultProps","undefined"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,aAAb,QAAaA,aAAb;AAAA,MAA+BC,KAA/B;;AAAA,SACrB,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAED;AAA9B,KAAiDC,KAAjD,GACGF,QAAQ,CAACG,MAAT,IAAmBH,QAAQ,CAACI,GAA5B,GACCJ,QAAQ,CAACI,GAAT,CAAa,UAACC,KAAD,EAAQC,CAAR;AAAA,WAAc,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAED,KAAK,CAACE,GAAN,IAAaD;AAA5B,OAAgCD,KAAhC,CAAd;AAAA,GAAb,CADD,GAGC,oBAAC,QAAD,QAAWL,QAAX,CAJJ,CADqB;AAAA,CAAvB;;AAUAD,cAAc,CAACS,YAAf,GAA8B;AAC5BP,EAAAA,aAAa,EAAEQ;AADa,CAA9B;AAeA,eAAeV,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport UnorderedList from '@govuk-react/unordered-list';\nimport ListItem from '@govuk-react/list-item';\n\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * import Link from '@govuk-react/link';\n *\n * <ListNavigation>\n *   <Link href=\"/section-a\">Section A</Link>\n *   <Link href=\"/section-b\">Section B</Link>\n * </ListNavigation>\n * ```\n *\n * Using React Router with `Link` component for GDS styled links\n * ```jsx\n * import { Link as RouterLink } from 'react-router-dom';\n * import { Link } from '@govuk-react/link';\n *\n * <ListNavigation listStyleType=\"circle\">\n *   <Link as={RouterLink} to=\"/link-a\">Link A</Link>\n *   <Link as={RouterLink} to=\"/link-b\">Link B</Link>\n * </ListNavigation>\n * ```\n *\n * ### References:\n * - https://govuk-static.herokuapp.com/component-guide/government_navigation\n *\n * ### TODO:\n * - Consider using the context API https://github.com/reactjs/rfcs/blob/master/text/0002-new-version-of-context.md\n * - Fix active state overlaping siblings\n */\nconst ListNavigation = ({ children, listStyleType, ...props }) => (\n  <UnorderedList listStyleType={listStyleType} {...props}>\n    {children.length && children.map ? (\n      children.map((child, i) => <ListItem key={child.key || i}>{child}</ListItem>)\n    ) : (\n      <ListItem>{children}</ListItem>\n    )}\n  </UnorderedList>\n);\n\nListNavigation.defaultProps = {\n  listStyleType: undefined,\n};\n\nListNavigation.propTypes = {\n  /**\n   * List navigation content\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * CSS value for `list-style-type`\n   */\n  listStyleType: PropTypes.string,\n};\n\nexport default ListNavigation;\n"],"file":"index.js"}