function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import UnorderedList from '@govuk-react/unordered-list';
import ListItem from '@govuk-react/list-item';
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * import Link from '@govuk-react/link';
 *
 * <ListNavigation>
 *   <Link href="/section-a">Section A</Link>
 *   <Link href="/section-b">Section B</Link>
 * </ListNavigation>
 * ```
 *
 * Using React Router with `Link` component for GDS styled links
 * ```jsx
 * import { Link as RouterLink } from 'react-router-dom';
 * import { Link } from '@govuk-react/link';
 *
 * <ListNavigation listStyleType="circle">
 *   <Link as={RouterLink} to="/link-a">Link A</Link>
 *   <Link as={RouterLink} to="/link-b">Link B</Link>
 * </ListNavigation>
 * ```
 *
 * ### References:
 * - https://govuk-static.herokuapp.com/component-guide/government_navigation
 *
 * ### TODO:
 * - Consider using the context API https://github.com/reactjs/rfcs/blob/master/text/0002-new-version-of-context.md
 * - Fix active state overlaping siblings
 */

var ListNavigation = function ListNavigation(_ref) {
  var children = _ref.children,
      listStyleType = _ref.listStyleType,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "listStyleType"]);

  return React.createElement(UnorderedList, _extends({
    listStyleType: listStyleType
  }, props), children.length && children.map ? children.map(function (child, i) {
    return React.createElement(ListItem, {
      key: child.key || i
    }, child);
  }) : React.createElement(ListItem, null, children));
};

ListNavigation.defaultProps = {
  listStyleType: undefined
};
export default ListNavigation;
//# sourceMappingURL=index.js.map