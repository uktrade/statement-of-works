// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListNavigation matches wrapper snapshot: wrapper mount 1`] = `
.c3 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  margin-bottom: 5px;
}

.c4 .c0 {
  margin-top: 10px;
}

.c4 > .c2 {
  margin-bottom: 5px;
}

.c1 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  margin-top: 0;
  margin-bottom: 15px;
  list-style-type: square;
  padding-left: 20px;
}

.c1 .c0 {
  margin-top: 10px;
}

.c1 > .c2 {
  margin-bottom: 5px;
}

@media print {
  .c3 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c3 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c1 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c1 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    margin-bottom: 20px;
  }
}

<ListNavigation
  listStyleType="square"
>
  <UnorderedList
    listStyleType="square"
  >
    <styled.ol
      as="ul"
      listStyleType="square"
    >
      <StyledComponent
        as="ul"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "c0",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                "color: #0b0c0c; @media print {
  color: #000;
}",
                "margin-top: 0; & & {
  margin-top: 10px;
}",
                [Function],
                [Function],
              ],
            },
            "defaultProps": Object {
              "listStyleType": undefined,
            },
            "displayName": "styled.ol",
            "foldedComponentIds": Array [],
            "propTypes": undefined,
            "render": [Function],
            "styledComponentId": "c0",
            "target": "ol",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        listStyleType="square"
      >
        <ul
          className="c0 c1"
        >
          <styled.li>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c2",
                    "isStatic": false,
                    "lastClassName": "c3",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                      "margin-bottom: 5px;",
                      [Function],
                    ],
                  },
                  "displayName": "styled.li",
                  "foldedComponentIds": Array [],
                  "propTypes": undefined,
                  "render": [Function],
                  "styledComponentId": "c2",
                  "target": "li",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <li
                className="c2 c3"
              >
                Example
              </li>
            </StyledComponent>
          </styled.li>
        </ul>
      </StyledComponent>
    </styled.ol>
  </UnorderedList>
</ListNavigation>
`;
