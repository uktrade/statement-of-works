import React from 'react';
import { mount } from 'enzyme';
import Caption from './fixtures';
describe('Caption', function () {
  // Capture errors as we're expecting to throw some
  // eslint-disable-next-line no-console
  var nativeError = console.error;
  beforeEach(function () {
    jest.resetModules(); // eslint-disable-next-line no-console

    console.error = function () {};
  });
  afterEach(function () {
    // eslint-disable-next-line no-console
    console.error = nativeError;
  });
  it('allows custom string-based font size without crashing', function () {
    var sizes = ['XL', 'XLARGE', 'L', 'LARGE', 'M', 'MEDIUM'];
    sizes.forEach(function (size) {
      expect(mount(React.createElement(Caption, {
        size: size
      }, "Tests")).exists()).toBeTruthy();
    });
  });
  it('allows custom numeric GDS font size without crashing', function () {
    mount(React.createElement(Caption, {
      size: 16
    }, "Test"));
  });
  it('throws an error if an unsupported size is used', function () {
    expect(function () {
      mount(React.createElement(Caption, {
        size: 0
      }, "example"));
    }).toThrow();
    expect(function () {
      mount(React.createElement(Caption, {
        size: 1
      }, "example"));
    }).toThrow();
    expect(function () {
      mount(React.createElement(Caption, {
        size: 99999
      }, "example"));
    }).toThrow();
    expect(function () {
      mount(React.createElement(Caption, {
        size: "test"
      }, "example"));
    }).toThrow();
  });
  it('matches wrapper snapshot', function () {
    expect(mount(React.createElement(Caption, null, "Heading text"))).toMatchSnapshot();
  });
});
//# sourceMappingURL=test.js.map