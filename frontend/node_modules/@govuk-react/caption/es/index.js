function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import styled from 'styled-components';
import React from 'react';
import PropTypes from 'prop-types';
import { SECONDARY_TEXT_COLOUR } from 'govuk-colours';
import { spacing, typography } from '@govuk-react/lib';
import { CAPTION_SIZES, MEDIA_QUERIES, SPACING_POINTS, TYPOGRAPHY_SCALE } from '@govuk-react/constants';
var StyledCaption = styled('span')(function (_ref) {
  var size = _ref.size;
  var actualSize = Number.isNaN(Number(size)) ? CAPTION_SIZES[size] : size;

  if (!actualSize) {
    throw Error("Unknown size " + size + " used for header.");
  }

  return typography.font({
    size: actualSize
  });
}, function (_ref2) {
  var _ref3;

  var size = _ref2.size;
  var actualSize = Number.isNaN(Number(size)) ? CAPTION_SIZES[size] : size; // bottom margin - hard-coded values because they're a bit odd

  var marginStyle = actualSize > 19 ? {
    marginBottom: SPACING_POINTS[1]
  } : undefined;
  var marginResponsiveStyle = actualSize === 24 ? (_ref3 = {}, _ref3[MEDIA_QUERIES.TABLET] = {
    marginBottom: 0
  }, _ref3) : undefined;
  return _objectSpread({}, marginStyle, marginResponsiveStyle);
}, {
  display: 'block',
  color: SECONDARY_TEXT_COLOUR
}, spacing.withWhiteSpace());
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * <Caption>Caption heading text</Caption>
 * ```
 *
 * With another header
 * ```jsx
 * import { H1 } from '@govuk-react/heading';
 *
 * <Caption size="XL">Supporting header text</Caption>
 * <H1>Main header text</H1>
 * ```
 *
 * ### References
 * - https://github.com/alphagov/govuk-frontend/blob/master/src/core/_typography.scss
 * - https://design-system.service.gov.uk/styles/typography/#headings
 */

var Caption = function Caption(props) {
  return React.createElement(StyledCaption, props);
};

Caption.defaultProps = {
  size: 'XL'
};
export default Caption;
//# sourceMappingURL=index.js.map