{"version":3,"sources":["../src/test.js"],"names":["React","ReactDOM","mount","LoadingBox","describe","it","div","document","createElement","render","expect","find","toHaveLength","text","toBe","toMatchSnapshot"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,QAAsB,QAAtB;AAEA,OAAOC,UAAP,MAAuB,GAAvB;AAEAC,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BC,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnC,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAP,IAAAA,QAAQ,CAACQ,MAAT,CAAgB,oBAAC,UAAD,kBAAhB,EAAkDH,GAAlD;AACD,GAHC,CAAF;AAKAD,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3CK,IAAAA,MAAM,CAACR,KAAK,CAAC,oBAAC,UAAD;AAAY,MAAA,OAAO;AAAnB,iBAAD,CAAL,CAAgDS,IAAhD,CAAqD,KAArD,CAAD,CAAN,CAAoEC,YAApE,CAAiF,CAAjF;AACD,GAFC,CAAF;AAIAP,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AAC1DK,IAAAA,MAAM,CACJR,KAAK,CACH,oBAAC,UAAD;AAAY,MAAA,OAAO,MAAnB;AAAoB,MAAA,KAAK,EAAC;AAA1B,iBADG,CAAL,CAKGS,IALH,CAKQ,OALR,EAMGE,IANH,EADI,CAAN,CAQEC,IARF,CAQO,KARP;AASD,GAVC,CAAF;AAYAT,EAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AACjDK,IAAAA,MAAM,CAACR,KAAK,CAAC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE;AAArB,iBAAD,CAAL,CAAwDS,IAAxD,CAA6D,KAA7D,CAAD,CAAN,CAA4EC,YAA5E,CAAyF,CAAzF;AACD,GAFC,CAAF;AAIAP,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAClCK,IAAAA,MAAM,CAACR,KAAK,CAAC,oBAAC,UAAD;AAAY,MAAA,OAAO;AAAnB,iBAAD,CAAN,CAAN,CAAwDa,eAAxD,CAAwE,iBAAxE;AACD,GAFC,CAAF;AAGD,CA7BO,CAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { mount } from 'enzyme';\n\nimport LoadingBox from '.';\n\ndescribe('LoadingBox', () => {\n  it('renders without crashing', () => {\n    const div = document.createElement('div');\n    ReactDOM.render(<LoadingBox>example</LoadingBox>, div);\n  });\n\n  it('should render a SVG when loading', () => {\n    expect(mount(<LoadingBox loading>example</LoadingBox>).find('svg')).toHaveLength(1);\n  });\n\n  it('should render a SVG title when passed the value', () => {\n    expect(\n      mount(\n        <LoadingBox loading title=\"cat\">\n          example\n        </LoadingBox>\n      )\n        .find('title')\n        .text()\n    ).toBe('cat');\n  });\n\n  it('shouldnt render a SVG when not loading', () => {\n    expect(mount(<LoadingBox loading={false}>example</LoadingBox>).find('svg')).toHaveLength(0);\n  });\n\n  it('matches wrapper loading', () => {\n    expect(mount(<LoadingBox loading>example</LoadingBox>)).toMatchSnapshot('wrapper loading');\n  });\n});\n"],"file":"test.js"}