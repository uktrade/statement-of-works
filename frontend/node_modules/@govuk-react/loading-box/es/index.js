function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { CSSTransition } from 'react-transition-group';
import hexRgb from 'hex-rgb';
import { Spinner } from '@govuk-react/icons';
import { BLACK, WHITE } from 'govuk-colours';
var spinnerClassName = 'icon-loading';
var StyledContainer = styled('div')({
  position: 'relative',
  paddingBottom: '2px',
  minHeight: '10px'
});
var Innerwrap = styled('div')(function (_ref) {
  var _fadeEnter, _fadeEnterActive, _fadeExit, _fadeExitActive, _ref2;

  var timeIn = _ref.timeIn,
      timeOut = _ref.timeOut,
      backgroundColor = _ref.backgroundColor,
      backgroundColorOpacity = _ref.backgroundColorOpacity;
  return _ref2 = {
    position: 'absolute',
    height: '100%',
    top: 0,
    right: 0,
    left: 0,
    bottom: 0,
    display: 'flex',
    justifyContent: 'center'
  }, _ref2["& ." + spinnerClassName] = {
    position: 'absolute',
    zIndex: 101,
    opacity: 1,
    display: 'block',
    height: '100%',
    maxHeight: 'calc(50vh + 100px)',
    transition: "opacity " + timeIn + "ms ease-in-out",
    willChange: 'opacity'
  }, _ref2['& .overlay'] = {
    zIndex: 100,
    transition: "background-color " + timeIn + "ms ease-in-out",
    willChange: 'background-color',
    backgroundColor: "rgba(\n      " + hexRgb(backgroundColor).red + ",\n      " + hexRgb(backgroundColor).blue + ",\n      " + hexRgb(backgroundColor).green + ",\n      " + backgroundColorOpacity + ")"
  }, _ref2['.fade-enter'] = (_fadeEnter = {
    '& .overlay': {
      backgroundColor: "rgba(\n        " + hexRgb(backgroundColor).red + ",\n        " + hexRgb(backgroundColor).blue + ",\n        " + hexRgb(backgroundColor).green + ",\n        0)",
      transitionDuration: timeIn + "ms"
    }
  }, _fadeEnter["& ." + spinnerClassName] = {
    opacity: 0,
    transitionDuration: timeIn + "ms",
    transitionDelay: timeIn / 2 + "ms"
  }, _fadeEnter), _ref2['.fade-enter-active'] = (_fadeEnterActive = {
    '& .overlay': {
      backgroundColor: "rgba(\n        " + hexRgb(backgroundColor).red + ",\n        " + hexRgb(backgroundColor).blue + ",\n        " + hexRgb(backgroundColor).green + ",\n        " + backgroundColorOpacity + ")",
      transitionDuration: timeIn + "ms"
    }
  }, _fadeEnterActive["& ." + spinnerClassName] = {
    opacity: 1,
    transitionDuration: timeIn + "ms",
    transitionDelay: timeIn / 2 + "ms"
  }, _fadeEnterActive), _ref2['.fade-exit'] = (_fadeExit = {
    '& .overlay': {
      backgroundColor: "rgba(\n        " + hexRgb(backgroundColor).red + ",\n        " + hexRgb(backgroundColor).blue + ",\n        " + hexRgb(backgroundColor).green + ",\n        " + backgroundColorOpacity + ")",
      transitionDuration: timeOut + "ms"
    }
  }, _fadeExit["& ." + spinnerClassName] = {
    opacity: 1,
    transitionDuration: timeOut + "ms"
  }, _fadeExit), _ref2['.fade-exit-active'] = (_fadeExitActive = {
    '& .overlay': {
      backgroundColor: "rgba(\n        " + hexRgb(backgroundColor).red + ",\n        " + hexRgb(backgroundColor).blue + ",\n        " + hexRgb(backgroundColor).green + ",\n        0)",
      transitionDuration: timeOut + "ms"
    }
  }, _fadeExitActive["& ." + spinnerClassName] = {
    opacity: 0,
    transitionDuration: timeOut + "ms"
  }, _fadeExitActive), _ref2;
});
var Overlay = styled('div')({
  position: 'absolute',
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  overflow: 'hidden',
  height: '100%',
  width: '100%'
});
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * <LoadingBox loading>
 *   Lorem ipsum dolor sit amet
 * </LoadingBox>
 * ```
 *
 * Loading box complex
 * ```jsx
 * <LoadingBox
 *    loading={false}
 *    backgroundColor={'#fff'}
 *    timeIn={800}
 *    timeOut={200}
 *    backgroundColorOpacity={0.85}
 *    spinnerColor={'#000'}
 * >
 *   Lorem ipsum dolor sit amet
 * </LoadingBox>
 * ```
 *
 * ### References:
 * - https://govuk-loader-prototype.herokuapp.com/components/loader
 *
 */

var LoadingBox = function LoadingBox(_ref3) {
  var children = _ref3.children,
      backgroundColor = _ref3.backgroundColor,
      backgroundColorOpacity = _ref3.backgroundColorOpacity,
      title = _ref3.title,
      loading = _ref3.loading,
      spinnerColor = _ref3.spinnerColor,
      timeIn = _ref3.timeIn,
      timeOut = _ref3.timeOut,
      props = _objectWithoutPropertiesLoose(_ref3, ["children", "backgroundColor", "backgroundColorOpacity", "title", "loading", "spinnerColor", "timeIn", "timeOut"]);

  return React.createElement(StyledContainer, props, React.createElement(CSSTransition, {
    timeout: timeOut,
    classNames: "fade",
    in: loading,
    unmountOnExit: true
  }, React.createElement(Innerwrap, {
    backgroundColor: backgroundColor,
    backgroundColorOpacity: backgroundColorOpacity,
    loading: loading,
    timeIn: timeIn,
    timeOut: timeOut
  }, React.createElement(Spinner, {
    title: title,
    className: spinnerClassName,
    fill: spinnerColor,
    width: "50px",
    height: "50px"
  }), React.createElement(Overlay, {
    className: "overlay"
  }))), children);
};

LoadingBox.defaultProps = {
  spinnerColor: BLACK,
  backgroundColor: WHITE,
  backgroundColorOpacity: 0.85,
  title: undefined,
  loading: false,
  timeIn: 800,
  timeOut: 200
};
export default LoadingBox;
//# sourceMappingURL=index.js.map