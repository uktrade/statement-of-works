// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`button basics matches snapshot 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  width: 100%;
  margin-top: 0;
  padding: 7px 10px;
  border: 2px solid transparent;
  border-radius: 0;
  color: #ffffff;
  background-color: #00823b;
  box-shadow: 0 2px 0 #003618;
  text-align: center;
  vertical-align: top;
  cursor: pointer;
  -webkit-appearance: none;
  margin-bottom: 22px;
}

.c0:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0:link,
.c0:visited,
.c0:active,
.c0:hover {
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.c0:hover,
.c0:focus {
  background-color: #00692f;
}

.c0:active {
  top: 2px;
  box-shadow: none;
}

.c0::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -4px;
  left: -2px;
  background: transparent;
}

.c0:active::before {
  top: -4px;
}

.c0:disabled {
  opacity: 0.5;
  background: #00823b;
}

.c0:disabled:hover {
  background-color: #00823b;
  cursor: default;
}

.c0:disabled:focus {
  outline: none;
}

.c0:disabled:active {
  top: 0;
  box-shadow: 0 2px 0 #003618;
}

.c0 svg {
  max-width: 15px;
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 19px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    width: auto;
  }
}

@media only screen and (min-width:641px) {
  .c0 svg {
    margin-left: 10px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 32px;
  }
}

<ForwardRef
  disabled={false}
  start={false}
>
  <styled.button
    disabled={false}
    isStart={false}
  >
    <StyledComponent
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
              [Function],
              [Function],
              [Function],
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isStart={false}
    >
      <button
        className="c0"
        disabled={false}
      >
        Example
      </button>
    </StyledComponent>
  </styled.button>
</ForwardRef>
`;

exports[`button blue button, with automatic colours matches snapshot 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  width: 100%;
  margin-top: 0;
  padding: 7px 10px;
  border: 2px solid transparent;
  border-radius: 0;
  color: #ffffff;
  background-color: #005ea5;
  box-shadow: 0 2px 0 #003259;
  text-align: center;
  vertical-align: top;
  cursor: pointer;
  -webkit-appearance: none;
  margin-bottom: 22px;
}

.c0:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0:link,
.c0:visited,
.c0:active,
.c0:hover {
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.c0:hover,
.c0:focus {
  background-color: #004f8c;
}

.c0:active {
  top: 2px;
  box-shadow: none;
}

.c0::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -4px;
  left: -2px;
  background: transparent;
}

.c0:active::before {
  top: -4px;
}

.c0:disabled {
  opacity: 0.5;
  background: #005ea5;
}

.c0:disabled:hover {
  background-color: #005ea5;
  cursor: default;
}

.c0:disabled:focus {
  outline: none;
}

.c0:disabled:active {
  top: 0;
  box-shadow: 0 2px 0 #003259;
}

.c0 svg {
  max-width: 15px;
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 19px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    width: auto;
  }
}

@media only screen and (min-width:641px) {
  .c0 svg {
    margin-left: 10px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 32px;
  }
}

<ButtonBlue>
  <ForwardRef
    buttonColour="#005ea5"
    disabled={false}
    start={false}
  >
    <styled.button
      buttonColour="#005ea5"
      disabled={false}
      isStart={false}
    >
      <StyledComponent
        buttonColour="#005ea5"
        disabled={false}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isStart={false}
      >
        <button
          className="c0"
          disabled={false}
        >
          Blue button
        </button>
      </StyledComponent>
    </styled.button>
  </ForwardRef>
</ButtonBlue>
`;

exports[`button button with icon matches snapshot 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 18px;
  line-height: 1;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  width: 100%;
  margin-top: 0;
  padding: 8px 15px;
  border: 2px solid transparent;
  border-radius: 0;
  color: #ffffff;
  background-color: #00823b;
  box-shadow: 0 2px 0 #003618;
  text-align: center;
  vertical-align: top;
  cursor: pointer;
  -webkit-appearance: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 22px;
}

.c0:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0:link,
.c0:visited,
.c0:active,
.c0:hover {
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.c0:hover,
.c0:focus {
  background-color: #00692f;
}

.c0:active {
  top: 2px;
  box-shadow: none;
}

.c0::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -4px;
  left: -2px;
  background: transparent;
}

.c0:active::before {
  top: -4px;
}

.c0:disabled {
  opacity: 0.5;
  background: #00823b;
}

.c0:disabled:hover {
  background-color: #00823b;
  cursor: default;
}

.c0:disabled:focus {
  outline: none;
}

.c0:disabled:active {
  top: 0;
  box-shadow: 0 2px 0 #003618;
}

.c0 svg {
  max-width: 15px;
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

@media print {
  .c0 {
    font-size: 18px;
    line-height: 1;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 24px;
    line-height: 1;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    width: auto;
  }
}

@media only screen and (min-width:641px) {
  .c0 svg {
    margin-left: 10px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 32px;
  }
}

<ButtonStartIcon>
  <ForwardRef
    disabled={false}
    icon={
      <ButtonArrow
        fill="currentColor"
        title="ButtonArrow"
      />
    }
    start={true}
  >
    <styled.button
      disabled={false}
      icon={
        <ButtonArrow
          fill="currentColor"
          title="ButtonArrow"
        />
      }
      isStart={true}
    >
      <StyledComponent
        disabled={false}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        icon={
          <ButtonArrow
            fill="currentColor"
            title="ButtonArrow"
          />
        }
        isStart={true}
      >
        <button
          className="c0"
          disabled={false}
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "flex-grow: 1;",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1"
              >
                Start now
              </span>
            </StyledComponent>
          </styled.span>
          <ButtonArrow
            fill="currentColor"
            title="ButtonArrow"
          >
            <SVG
              fill="currentColor"
              title="ButtonArrow"
              viewBox="0 0 706 860"
            >
              <svg
                fill="currentColor"
                height="100%"
                style={
                  Object {
                    "display": "block",
                  }
                }
                version="1.1"
                viewBox="0 0 706 860"
                width="100%"
              >
                <title>
                  ButtonArrow
                </title>
                <g>
                  <path
                    d="M.152 0h252.993l452.108 430H452.261z"
                  />
                  <path
                    d="M0 860h252.993L705.1 430H452.108z"
                    fillOpacity="0.5"
                  />
                </g>
              </svg>
            </SVG>
          </ButtonArrow>
        </button>
      </StyledComponent>
    </styled.button>
  </ForwardRef>
</ButtonStartIcon>
`;

exports[`button custom colours matches snapshot 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  width: 100%;
  margin-top: 0;
  padding: 7px 10px;
  border: 2px solid transparent;
  border-radius: 0;
  color: #0b0c0c;
  background-color: #dee0e2;
  box-shadow: 0 2px 0 #f47738;
  text-align: center;
  vertical-align: top;
  cursor: pointer;
  -webkit-appearance: none;
  margin-bottom: 22px;
}

.c0:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0:link,
.c0:visited,
.c0:active,
.c0:hover {
  color: #0b0c0c;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.c0:hover,
.c0:focus {
  background-color: #ffbf47;
}

.c0:active {
  top: 2px;
  box-shadow: none;
}

.c0::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -4px;
  left: -2px;
  background: transparent;
}

.c0:active::before {
  top: -4px;
}

.c0:disabled {
  opacity: 0.5;
  background: #dee0e2;
}

.c0:disabled:hover {
  background-color: #dee0e2;
  cursor: default;
}

.c0:disabled:focus {
  outline: none;
}

.c0:disabled:active {
  top: 0;
  box-shadow: 0 2px 0 #f47738;
}

.c0 svg {
  max-width: 15px;
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 19px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    width: auto;
  }
}

@media only screen and (min-width:641px) {
  .c0 svg {
    margin-left: 10px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 32px;
  }
}

<ButtonWacky>
  <ForwardRef
    buttonColour="#dee0e2"
    buttonHoverColour="#ffbf47"
    buttonShadowColour="#f47738"
    buttonTextColour="#0b0c0c"
    disabled={false}
    start={false}
  >
    <styled.button
      buttonColour="#dee0e2"
      buttonHoverColour="#ffbf47"
      buttonShadowColour="#f47738"
      buttonTextColour="#0b0c0c"
      disabled={false}
      isStart={false}
    >
      <StyledComponent
        buttonColour="#dee0e2"
        buttonHoverColour="#ffbf47"
        buttonShadowColour="#f47738"
        buttonTextColour="#0b0c0c"
        disabled={false}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isStart={false}
      >
        <button
          className="c0"
          disabled={false}
        >
          Wacky colours
        </button>
      </StyledComponent>
    </styled.button>
  </ForwardRef>
</ButtonWacky>
`;

exports[`button disabled matches snapshot 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  width: 100%;
  margin-top: 0;
  padding: 7px 10px;
  border: 2px solid transparent;
  border-radius: 0;
  color: #ffffff;
  background-color: #00823b;
  box-shadow: 0 2px 0 #003618;
  text-align: center;
  vertical-align: top;
  cursor: pointer;
  -webkit-appearance: none;
  margin-bottom: 22px;
}

.c0:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0:link,
.c0:visited,
.c0:active,
.c0:hover {
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.c0:hover,
.c0:focus {
  background-color: #00692f;
}

.c0:active {
  top: 2px;
  box-shadow: none;
}

.c0::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -4px;
  left: -2px;
  background: transparent;
}

.c0:active::before {
  top: -4px;
}

.c0:disabled {
  opacity: 0.5;
  background: #00823b;
}

.c0:disabled:hover {
  background-color: #00823b;
  cursor: default;
}

.c0:disabled:focus {
  outline: none;
}

.c0:disabled:active {
  top: 0;
  box-shadow: 0 2px 0 #003618;
}

.c0 svg {
  max-width: 15px;
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 19px;
    line-height: 19px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    width: auto;
  }
}

@media only screen and (min-width:641px) {
  .c0 svg {
    margin-left: 10px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 32px;
  }
}

<ButtonDisabled>
  <ForwardRef
    disabled={true}
    start={false}
  >
    <styled.button
      disabled={true}
      isStart={false}
    >
      <StyledComponent
        disabled={true}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isStart={false}
      >
        <button
          className="c0"
          disabled={true}
        >
          Disabled primary button
        </button>
      </StyledComponent>
    </styled.button>
  </ForwardRef>
</ButtonDisabled>
`;

exports[`button start button matches snapshot 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 18px;
  line-height: 1;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  width: 100%;
  margin-top: 0;
  padding: 8px 15px;
  border: 2px solid transparent;
  border-radius: 0;
  color: #ffffff;
  background-color: #00823b;
  box-shadow: 0 2px 0 #003618;
  text-align: center;
  vertical-align: top;
  cursor: pointer;
  -webkit-appearance: none;
  margin-bottom: 22px;
}

.c0:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0:link,
.c0:visited,
.c0:active,
.c0:hover {
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.c0:hover,
.c0:focus {
  background-color: #00692f;
}

.c0:active {
  top: 2px;
  box-shadow: none;
}

.c0::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -4px;
  left: -2px;
  background: transparent;
}

.c0:active::before {
  top: -4px;
}

.c0:disabled {
  opacity: 0.5;
  background: #00823b;
}

.c0:disabled:hover {
  background-color: #00823b;
  cursor: default;
}

.c0:disabled:focus {
  outline: none;
}

.c0:disabled:active {
  top: 0;
  box-shadow: 0 2px 0 #003618;
}

.c0 svg {
  max-width: 15px;
}

@media print {
  .c0 {
    font-size: 18px;
    line-height: 1;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 24px;
    line-height: 1;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    width: auto;
  }
}

@media only screen and (min-width:641px) {
  .c0 svg {
    margin-left: 10px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 32px;
  }
}

<ButtonStart>
  <ForwardRef
    disabled={false}
    start={true}
  >
    <styled.button
      disabled={false}
      isStart={true}
    >
      <StyledComponent
        disabled={false}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isStart={true}
      >
        <button
          className="c0"
          disabled={false}
        >
          Save and continue
        </button>
      </StyledComponent>
    </styled.button>
  </ForwardRef>
</ButtonStart>
`;
