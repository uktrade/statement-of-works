{"version":3,"sources":["../src/index.js"],"names":["styled","PropTypes","React","BORDER_WIDTH_FORM_ELEMENT","FOCUSABLE","MEDIA_QUERIES","SPACING_POINTS","spacing","typography","BUTTON_COLOUR","BUTTON_COLOUR_DARKEN_15","WHITE","darken","stripUnit","BUTTON_SHADOW_SIZE","RAW_SPACING_2","RAW_BORDER_WIDTH","RAW_SHADOW","HALF_SHADOW","BASE_PAD","StyledButton","isStart","font","size","lineHeight","weight","undefined","buttonColour","buttonHoverColour","buttonShadowColour","buttonTextColour","boxSizing","display","position","width","marginTop","padding","border","borderRadius","color","backgroundColor","boxShadow","textAlign","verticalAlign","cursor","WebkitAppearance","TABLET","textDecoration","top","content","right","bottom","left","background","opacity","outline","maxWidth","marginLeft","icon","alignItems","justifyContent","withWhiteSpace","margin","direction","adjustment","ButtonContents","flexGrow","Button","forwardRef","ref","start","children","props","propTypes","node","isRequired","bool","disabled","string","defaultProps"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,yBAAT,EAAoCC,SAApC,EAA+CC,aAA/C,EAA8DC,cAA9D,QAAoF,wBAApF;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,aAAT,EAAwBC,uBAAxB,EAAiDC,KAAjD,QAA8D,eAA9D;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,UAAlC;AAEA,IAAMC,kBAAkB,GAAGX,yBAA3B;AACA,IAAMY,aAAa,GAAGT,cAAc,CAAC,CAAD,CAApC;AACA,IAAMU,gBAAgB,GAAGH,SAAS,CAACV,yBAAD,CAAlC;AACA,IAAMc,UAAU,GAAGJ,SAAS,CAACC,kBAAD,CAA5B;AACA,IAAMI,WAAW,GAAGD,UAAU,GAAG,CAAjC;AACA,IAAME,QAAQ,GAAGJ,aAAa,GAAGC,gBAAjC;AAEA,IAAMI,YAAY,GAAGpB,MAAM,CAAC,QAAD,CAAN,CACnB;AAAA,MAAGqB,OAAH,QAAGA,OAAH;AAAA,SACEb,UAAU,CAACc,IAAX,CAAgB;AACdC,IAAAA,IAAI,EAAEF,OAAO,GAAG,EAAH,GAAQ,EADP;AAEdG,IAAAA,UAAU,EAAEH,OAAO,GAAG,GAAH,GAAS,MAFd;AAGdI,IAAAA,MAAM,EAAEJ,OAAO,GAAG,MAAH,GAAYK;AAHb,GAAhB,CADF;AAAA,CADmB,EAOnBtB,SAPmB,EASnB;AAAA;;AAAA,iCACEuB,YADF;AAAA,MACEA,YADF,mCACiBlB,aADjB;AAAA,oCAEEmB,iBAFF;AAAA,MAEEA,iBAFF,sCAEsBhB,MAAM,CAAC,IAAD,EAAOe,YAAP,CAF5B;AAAA,oCAGEE,kBAHF;AAAA,MAGEA,kBAHF,sCAGuBF,YAAY,KAAKlB,aAAjB,GAAiCC,uBAAjC,GAA2DE,MAAM,CAAC,IAAD,EAAOe,YAAP,CAHxF;AAAA,oCAIEG,gBAJF;AAAA,MAIEA,gBAJF,sCAIqBnB,KAJrB;AAAA,MAKEU,OALF,SAKEA,OALF;AAAA;AAOEU,IAAAA,SAAS,EAAE,YAPb;AAQEC,IAAAA,OAAO,EAAE,cARX;AASEC,IAAAA,QAAQ,EAAE,UATZ;AAUEC,IAAAA,KAAK,EAAE,MAVT;AAWEC,IAAAA,SAAS,EAAE,CAXb;AAYEC,IAAAA,OAAO,EAAEf,OAAO,CAAC;AAAD,MACTF,QADS,WACKb,cAAc,CAAC,CAAD,CADnB,UAETa,QAAQ,GAAGD,WAFF,WAEmBZ,cAAc,CAAC,CAAD,CAFjC,OAZlB;AAeE+B,IAAAA,MAAM,EAAKlC,yBAAL,uBAfR;AAgBEmC,IAAAA,YAAY,EAAE,CAhBhB;AAiBEC,IAAAA,KAAK,EAAET,gBAjBT;AAkBEU,IAAAA,eAAe,EAAEb,YAlBnB;AAmBEc,IAAAA,SAAS,SAAO3B,kBAAP,WAA+Be,kBAnB1C;AAoBEa,IAAAA,SAAS,EAAE,QApBb;AAqBEC,IAAAA,aAAa,EAAE,KArBjB;AAsBEC,IAAAA,MAAM,EAAE,SAtBV;AAuBEC,IAAAA,gBAAgB,EAAE;AAvBpB,WAyBGxC,aAAa,CAACyC,MAzBjB,IAyB0B;AACtBZ,IAAAA,KAAK,EAAE;AADe,GAzB1B,QA6BE,sCA7BF,IA6B0C;AACtCK,IAAAA,KAAK,EAAET,gBAD+B;AAEtCiB,IAAAA,cAAc,EAAE;AAFsB,GA7B1C,QAkCE,qBAlCF,IAkCyB;AACrBX,IAAAA,OAAO,EAAE,CADY;AAErBC,IAAAA,MAAM,EAAE;AAFa,GAlCzB,QAuCE,kBAvCF,IAuCsB;AAClBG,IAAAA,eAAe,EAAEZ;AADC,GAvCtB,QA2CE,SA3CF,IA2Ca;AACToB,IAAAA,GAAG,EAAElC,kBADI;AAET2B,IAAAA,SAAS,EAAE;AAFF,GA3Cb,QAmDE,UAnDF,IAmDc;AACVQ,IAAAA,OAAO,EAAE,IADC;AAEVjB,IAAAA,OAAO,EAAE,OAFC;AAGVC,IAAAA,QAAQ,EAAE,UAHA;AAIVe,IAAAA,GAAG,QAAM7C,yBAJC;AAKV+C,IAAAA,KAAK,QAAM/C,yBALD;AAMVgD,IAAAA,MAAM,SAAMnC,gBAAgB,GAAGC,UAAzB,QANI;AAOVmC,IAAAA,IAAI,QAAMjD,yBAPA;AAQVkD,IAAAA,UAAU,EAAE;AARF,GAnDd,QA8DE,kBA9DF,IA8DsB;AAClBL,IAAAA,GAAG,SAAMhC,gBAAgB,GAAGC,UAAzB;AADe,GA9DtB,QAkEE,WAlEF,IAkEe;AACXqC,IAAAA,OAAO,EAAE,GADE;AAEXD,IAAAA,UAAU,EAAE1B,YAFD;AAGX,cAAU;AACRa,MAAAA,eAAe,EAAEb,YADT;AAERiB,MAAAA,MAAM,EAAE;AAFA,KAHC;AAOX,cAAU;AACRW,MAAAA,OAAO,EAAE;AADD,KAPC;AAUX,eAAW;AACTP,MAAAA,GAAG,EAAE,CADI;AAETP,MAAAA,SAAS,SAAO3B,kBAAP,WAA+Be;AAF/B;AAVA,GAlEf,QAkFE,MAlFF;AAmFI2B,IAAAA,QAAQ,EAAE;AAnFd,UAoFKnD,aAAa,CAACyC,MApFnB,IAoF4B;AACtBW,IAAAA,UAAU,EAAEnD,cAAc,CAAC,CAAD;AADJ,GApF5B;AAAA,CATmB,EAmGnB;AACA,iBAAc;AAAA,MAAXoD,IAAW,SAAXA,IAAW;;AACZ,MAAIA,IAAJ,EAAU;AACR,WAAO;AACL1B,MAAAA,OAAO,EAAE,MADJ;AAEL2B,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE;AAHX,KAAP;AAKD;;AAED,SAAOlC,SAAP;AACD,CA9GkB,EAgHnBnB,OAAO,CAACsD,cAAR,CAAuB;AACrBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,SAAS,EAAE,QAAb;AAAuBxC,IAAAA,IAAI,EAAE,CAA7B;AAAgCyC,IAAAA,UAAU,EAAE/C;AAA5C;AADa,CAAvB,CAhHmB,CAArB;AAqHA,IAAMgD,cAAc,GAAGjE,MAAM,CAAC,MAAD,CAAN,CAAe;AACpCkE,EAAAA,QAAQ,EAAE;AAD0B,CAAf,CAAvB;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAMC,MAAM,GAAGjE,KAAK,CAACkE,UAAN,CAAiB,iBAAsCC,GAAtC;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,QAAV,SAAUA,QAAV;AAAA,MAAoBb,IAApB,SAAoBA,IAApB;AAAA,MAA6Bc,KAA7B;;AAAA,SAC9B,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEH,GAAnB;AAAwB,IAAA,OAAO,EAAEC,KAAjC;AAAwC,IAAA,IAAI,EAAEZ;AAA9C,KAAwDc,KAAxD,GACGd,IAAI,GAAG,oBAAC,cAAD,QAAiBa,QAAjB,CAAH,GAAiDA,QADxD,EAEGb,IAFH,CAD8B;AAAA,CAAjB,CAAf;AAOAS,MAAM,CAACM,SAAP,GAAmB;AACjB;;;AAGAF,EAAAA,QAAQ,EAAEtE,SAAS,CAACyE,IAAV,CAAeC,UAJR;;AAKjB;;;AAGAjB,EAAAA,IAAI,EAAEzD,SAAS,CAACyE,IARC;;AASjB;;;AAGAJ,EAAAA,KAAK,EAAErE,SAAS,CAAC2E,IAZA;;AAajB;;;AAGAC,EAAAA,QAAQ,EAAE5E,SAAS,CAAC2E,IAhBH;;AAiBjB;;;AAGAjD,EAAAA,YAAY,EAAE1B,SAAS,CAAC6E,MApBP;;AAqBjB;;;;AAIAlD,EAAAA,iBAAiB,EAAE3B,SAAS,CAAC6E,MAzBZ;;AA0BjB;;;;AAIAjD,EAAAA,kBAAkB,EAAE5B,SAAS,CAAC6E,MA9Bb;;AA+BjB;;;;AAIAhD,EAAAA,gBAAgB,EAAE7B,SAAS,CAAC6E;AAnCX,CAAnB;AAsCAX,MAAM,CAACY,YAAP,GAAsB;AACpBrB,EAAAA,IAAI,EAAEhC,SADc;AAEpBmD,EAAAA,QAAQ,EAAE,KAFU;AAGpBP,EAAAA,KAAK,EAAE,KAHa;AAIpB3C,EAAAA,YAAY,EAAED,SAJM;AAKpBE,EAAAA,iBAAiB,EAAEF,SALC;AAMpBG,EAAAA,kBAAkB,EAAEH,SANA;AAOpBI,EAAAA,gBAAgB,EAAEJ;AAPE,CAAtB;AAUA,eAAeyC,MAAf","sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { BORDER_WIDTH_FORM_ELEMENT, FOCUSABLE, MEDIA_QUERIES, SPACING_POINTS } from '@govuk-react/constants';\nimport { spacing, typography } from '@govuk-react/lib';\nimport { BUTTON_COLOUR, BUTTON_COLOUR_DARKEN_15, WHITE } from 'govuk-colours';\nimport { darken, stripUnit } from 'polished';\n\nconst BUTTON_SHADOW_SIZE = BORDER_WIDTH_FORM_ELEMENT;\nconst RAW_SPACING_2 = SPACING_POINTS[2];\nconst RAW_BORDER_WIDTH = stripUnit(BORDER_WIDTH_FORM_ELEMENT);\nconst RAW_SHADOW = stripUnit(BUTTON_SHADOW_SIZE);\nconst HALF_SHADOW = RAW_SHADOW / 2;\nconst BASE_PAD = RAW_SPACING_2 - RAW_BORDER_WIDTH;\n\nconst StyledButton = styled('button')(\n  ({ isStart }) =>\n    typography.font({\n      size: isStart ? 24 : 19,\n      lineHeight: isStart ? '1' : '19px',\n      weight: isStart ? 'bold' : undefined,\n    }),\n  FOCUSABLE,\n\n  ({\n    buttonColour = BUTTON_COLOUR,\n    buttonHoverColour = darken(0.05, buttonColour),\n    buttonShadowColour = buttonColour === BUTTON_COLOUR ? BUTTON_COLOUR_DARKEN_15 : darken(0.15, buttonColour),\n    buttonTextColour = WHITE,\n    isStart,\n  }) => ({\n    boxSizing: 'border-box',\n    display: 'inline-block',\n    position: 'relative',\n    width: '100%',\n    marginTop: 0,\n    padding: isStart // differs from govuk-frontend owing to how icons displayed\n      ? `${BASE_PAD}px ${SPACING_POINTS[3]}px`\n      : `${BASE_PAD - HALF_SHADOW}px ${SPACING_POINTS[2]}px`,\n    border: `${BORDER_WIDTH_FORM_ELEMENT} solid transparent`,\n    borderRadius: 0,\n    color: buttonTextColour,\n    backgroundColor: buttonColour,\n    boxShadow: `0 ${BUTTON_SHADOW_SIZE} 0 ${buttonShadowColour}`,\n    textAlign: 'center',\n    verticalAlign: 'top',\n    cursor: 'pointer',\n    WebkitAppearance: 'none',\n\n    [MEDIA_QUERIES.TABLET]: {\n      width: 'auto',\n    },\n\n    '&:link, &:visited, &:active, &:hover': {\n      color: buttonTextColour,\n      textDecoration: 'none',\n    },\n\n    '&::-moz-focus-inner': {\n      padding: 0,\n      border: 0,\n    },\n\n    '&:hover, &:focus': {\n      backgroundColor: buttonHoverColour,\n    },\n\n    ':active': {\n      top: BUTTON_SHADOW_SIZE,\n      boxShadow: 'none',\n    },\n\n    // NB this is from govuk-frontend\n    // Use a pseudo element to expand the click target area to include the\n    // button's shadow as well, in case users try to click it.\n    '::before': {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      top: `-${BORDER_WIDTH_FORM_ELEMENT}`,\n      right: `-${BORDER_WIDTH_FORM_ELEMENT}`,\n      bottom: `-${RAW_BORDER_WIDTH + RAW_SHADOW}px`,\n      left: `-${BORDER_WIDTH_FORM_ELEMENT}`,\n      background: 'transparent',\n    },\n\n    '&:active::before': {\n      top: `-${RAW_BORDER_WIDTH + RAW_SHADOW}px`,\n    },\n\n    ':disabled': {\n      opacity: 0.5,\n      background: buttonColour,\n      ':hover': {\n        backgroundColor: buttonColour,\n        cursor: 'default',\n      },\n      ':focus': {\n        outline: 'none',\n      },\n      ':active': {\n        top: 0,\n        boxShadow: `0 ${BUTTON_SHADOW_SIZE} 0 ${buttonShadowColour}`,\n      },\n    },\n\n    ' svg': {\n      maxWidth: '15px',\n      [MEDIA_QUERIES.TABLET]: {\n        marginLeft: SPACING_POINTS[2],\n      },\n    },\n  }),\n\n  // NB we drift from govuk-frontend here in how we display icons\n  ({ icon }) => {\n    if (icon) {\n      return {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      };\n    }\n\n    return undefined;\n  },\n\n  spacing.withWhiteSpace({\n    margin: { direction: 'bottom', size: 6, adjustment: RAW_SHADOW },\n  })\n);\n\nconst ButtonContents = styled('span')({\n  flexGrow: 1,\n});\n\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * <Button>My button text</Button>\n * ```\n *\n * With Icon\n * ```jsx\n * import { ButtonArrow } from '@govuk-react/icons';\n *\n * <Button icon={<ButtonArrow />}>My button text</Button>\n * ```\n *\n * ### References:\n * - https://design-system.service.gov.uk/components/button/\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/components/button/_button.scss\n *\n * ### TODO:\n * - Remove cascade styling for nested elements, specifically `svg`\n * - Consider ensuring text colour automatically switches between black/white based on WCAG guidance\n *   - see https://www.w3.org/TR/WCAG20-TECHS/G18.html\n *   - can use Polished's `readableColor` call, but translate their black to govuk's black\n */\nconst Button = React.forwardRef(({ start, children, icon, ...props }, ref) => (\n  <StyledButton ref={ref} isStart={start} icon={icon} {...props}>\n    {icon ? <ButtonContents>{children}</ButtonContents> : children}\n    {icon}\n  </StyledButton>\n));\n\nButton.propTypes = {\n  /**\n   * Button text\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Button icon\n   */\n  icon: PropTypes.node,\n  /**\n   * Renders a large button if set to true\n   */\n  start: PropTypes.bool,\n  /**\n   * Renders a disabled button and removes pointer events if set to true\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Override for default button colour\n   */\n  buttonColour: PropTypes.string,\n  /**\n   * Override for default button hover colour,\n   * which defaults to `buttonColour` darkened by 5%\n   */\n  buttonHoverColour: PropTypes.string,\n  /**\n   * Override for default button shadow colour,\n   * which defaults to `buttonColour` darkened by 15%\n   */\n  buttonShadowColour: PropTypes.string,\n  /**\n   * Override for default button text colour,\n   * which defaults to govuk white\n   */\n  buttonTextColour: PropTypes.string,\n};\n\nButton.defaultProps = {\n  icon: undefined,\n  disabled: false,\n  start: false,\n  buttonColour: undefined,\n  buttonHoverColour: undefined,\n  buttonShadowColour: undefined,\n  buttonTextColour: undefined,\n};\n\nexport default Button;\n"],"file":"index.js"}