var _styled;

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { link, spacing, typography } from '@govuk-react/lib';
import { BLACK, BORDER_COLOUR, GREY_4, WHITE } from 'govuk-colours';
import { MEDIA_QUERIES } from '@govuk-react/constants';
var spacingSimple1 = spacing.simple(1);
var spacingSimple2 = spacing.simple(2);
var spacingSimple3 = spacing.simple(3);
var spacingSimple4 = spacing.simple(4);
var spacingSimple5 = spacing.simple(5);
var StyledListItem = styled('li')((_styled = {
  marginLeft: spacingSimple5,
  ':before': {
    content: "'\\2014  '",
    marginLeft: -spacingSimple5,
    paddingRight: spacingSimple1
  }
}, _styled[MEDIA_QUERIES.TABLET] = {
  marginLeft: 0,
  ':before': {
    content: 'none'
  }
}, _styled));
var StyledHyperLink = styled('a')(typography.font({
  size: 19
}), link.common(), link.styleDefault, {
  display: 'inline-block',
  paddingTop: spacingSimple2,
  paddingBottom: spacingSimple2
}, function (_ref) {
  var _ref2;

  var selected = _ref.selected;
  return _ref2 = {
    color: selected && BLACK,
    textDecoration: selected ? 'none' : undefined
  }, _ref2[MEDIA_QUERIES.TABLET] = {
    marginRight: spacingSimple1,
    float: 'left',
    textAlign: 'center',
    textDecoration: 'none',
    color: BLACK,
    ':link,:visited': {
      color: BLACK
    },
    marginTop: selected ? -spacingSimple1 : undefined,
    marginBottom: selected ? -1 : undefined,
    paddingTop: selected ? spacingSimple3 - 1 : undefined,
    paddingRight: selected ? spacingSimple4 - 1 : spacingSimple4,
    paddingBottom: selected ? spacingSimple3 + 1 : undefined,
    paddingLeft: selected ? spacingSimple4 - 1 : spacingSimple4,
    border: selected && "1px solid " + BORDER_COLOUR,
    borderBottom: selected ? 0 : 1,
    backgroundColor: selected ? WHITE : GREY_4,
    ':focus': {
      backgroundColor: selected ? 'transparent' : GREY_4
    }
  }, _ref2;
});

var Tab = function Tab(_ref3) {
  var children = _ref3.children,
      href = _ref3.href,
      onClick = _ref3.onClick,
      selected = _ref3.selected;
  return React.createElement(StyledListItem, null, React.createElement(StyledHyperLink, {
    selected: selected,
    onClick: onClick,
    href: href
  }, children));
};

Tab.defaultProps = {
  selected: false
};
export default Tab;
//# sourceMappingURL=index.js.map