{"version":3,"sources":["../src/index.js"],"names":["React","PropTypes","styled","HintText","FOCUS_COLOUR","BORDER_WIDTH","BORDER_WIDTH_FORM_ELEMENT","FOCUS_WIDTH","SPACING_POINTS","spacing","typography","checkboxSize","labelPaddingLeftRight","StyledCheckbox","font","size","display","position","minHeight","padding","clear","withWhiteSpace","marginBottom","StyledInput","zIndex","top","left","width","height","opacity","outline","outlineOffset","boxShadow","disabled","cursor","pointerEvents","StyledLabel","MsTouchAction","touchAction","content","boxSizing","border","background","transform","borderWidth","borderTopColor","StyledCheckboxHint","paddingLeft","paddingRight","Checkbox","children","className","hint","props","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport HintText from '@govuk-react/hint-text';\nimport { FOCUS_COLOUR } from 'govuk-colours';\nimport { BORDER_WIDTH, BORDER_WIDTH_FORM_ELEMENT, FOCUS_WIDTH, SPACING_POINTS } from '@govuk-react/constants';\nimport { spacing, typography } from '@govuk-react/lib';\n\nconst checkboxSize = SPACING_POINTS[7];\nconst labelPaddingLeftRight = SPACING_POINTS[3];\n\nconst StyledCheckbox = styled('label')(\n  typography.font({ size: 19 }),\n  {\n    display: 'block',\n    position: 'relative',\n    minHeight: checkboxSize,\n    padding: `0 0 0 ${checkboxSize}px`,\n    clear: 'left',\n  },\n  spacing.withWhiteSpace({ marginBottom: 2 })\n);\n\nconst StyledInput = styled('input')(\n  {\n    position: 'absolute',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    width: checkboxSize,\n    height: checkboxSize,\n    opacity: 0,\n    ':checked + span:after': {\n      opacity: 1,\n    },\n    ':focus + span:before': {\n      outline: `${FOCUS_WIDTH} solid transparent`,\n      outlineOffset: FOCUS_WIDTH,\n      boxShadow: `0 0 0 ${FOCUS_WIDTH} ${FOCUS_COLOUR}`,\n    },\n  },\n  ({ disabled }) => ({\n    cursor: disabled ? 'default' : 'pointer',\n    ' + span': {\n      opacity: disabled ? '.5' : '1',\n      pointerEvents: disabled ? 'none' : 'auto',\n    },\n  })\n);\n\nconst StyledLabel = styled('span')({\n  display: 'inline-block',\n  cursor: 'pointer',\n  padding: `8px ${labelPaddingLeftRight}px ${SPACING_POINTS[1]}px`,\n  MsTouchAction: 'manipulation',\n  touchAction: 'manipulation',\n  '::before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: checkboxSize,\n    height: checkboxSize,\n    border: `${BORDER_WIDTH_FORM_ELEMENT} solid black`,\n    background: 'transparent',\n  },\n  '::after': {\n    content: \"''\",\n    position: 'absolute',\n    top: '11px',\n    left: '9px',\n    width: '18px',\n    height: '7px',\n    transform: 'rotate(-45deg)',\n    border: 'solid',\n    borderWidth: `0 0 ${BORDER_WIDTH} ${BORDER_WIDTH}`,\n    borderTopColor: 'transparent',\n    background: 'transparent',\n    opacity: 0,\n  },\n});\n\nconst StyledCheckboxHint = styled(HintText)({\n  display: 'block',\n  paddingLeft: labelPaddingLeftRight,\n  paddingRight: labelPaddingLeftRight,\n});\n\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * <Checkbox>Text displayed next to checkbox</Checkbox>\n * ```\n *\n * With disabled state\n * ```jsx\n * <Checkbox disabled=\"disabled\">Disabled checkbox option</Checkbox>\n * ```\n *\n * Checkbox preselected\n * ```jsx\n * <Checkbox defaultChecked>Farm or agricultural waste</Checkbox>\n * ```\n *\n * Checkbox preselected & disabled\n * ```jsx\n * <Checkbox disabled=\"disabled\" defaultChecked>Farm or agricultural waste</Checkbox>\n * ```\n *\n * Checkbox with hint text\n * ```jsx\n * <Checkbox hint=\"including English, Scottish, Welsh and Northern Irish\">British</Checkbox>\n *```\n * ### References:\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/components/checkboxes/_checkboxes.scss\n *\n */\nconst Checkbox = ({ children, className, hint, ...props }) => (\n  <StyledCheckbox className={className}>\n    <StyledInput type=\"checkbox\" {...props} />\n    <StyledLabel>{children}</StyledLabel>\n    {hint && <StyledCheckboxHint>{hint}</StyledCheckboxHint>}\n  </StyledCheckbox>\n);\n\nCheckbox.defaultProps = {\n  hint: undefined,\n  className: undefined,\n};\n\nCheckbox.propTypes = {\n  hint: PropTypes.node,\n  /**\n   * Text content for checkbox\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * CSS Classname for outermost container\n   */\n  className: PropTypes.string,\n};\n\nexport default Checkbox;\n"],"file":"index.js"}