function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { BLACK } from 'govuk-colours';
import { SPACING_POINTS } from '@govuk-react/constants';
import { link, shape, spacing, typography } from '@govuk-react/lib';
var Anchor = styled('a')(typography.font({
  size: 16
}), link.common(), link.styleText, {
  display: 'inline-block',
  position: 'relative',
  // margins here are not responsive, hence why they're not specified using withWhiteSpace
  marginTop: SPACING_POINTS[3],
  marginBottom: SPACING_POINTS[3],
  paddingLeft: '14px',
  borderBottom: "1px solid " + BLACK,
  textDecoration: 'none',
  '::before': _objectSpread({}, shape.arrow({
    direction: 'left',
    base: 10,
    height: 6
  }), {
    content: "''",
    position: 'absolute',
    top: '-1px',
    bottom: '1px',
    left: 0,
    margin: 'auto'
  })
}, spacing.withWhiteSpace());
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * <BackLink>Back</BackLink>
 * ```
 *
 * With custom click handler
 * ```jsx
 * <BackLink onClick={this.myCustomFunction}>Back</BackLink>
 * ```
 *
 * With `href` attribute
 * ```jsx
 * <BackLink href='#'>Back</BackLink>
 * ```
 *
 * ### References:
 * - https://github.com/alphagov/govuk-frontend/tree/master/src/components/back-link
 *
 */

var BackLink = function BackLink(props) {
  return React.createElement(Anchor, props);
};

BackLink.defaultProps = {
  children: 'Back',
  onClick: undefined
};
export default BackLink;
//# sourceMappingURL=index.js.map