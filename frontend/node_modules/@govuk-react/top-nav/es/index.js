var _styled, _styled2, _styled3;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { BLACK, WHITE } from 'govuk-colours';
import { MEDIA_QUERIES } from '@govuk-react/constants';
import { typography } from '@govuk-react/lib';
import CrownIcon from '@govuk-react/icon-crown';
import styled from 'styled-components';
import TopNavWrapper from './atoms/top-nav-wrapper';
import TopNavInner from './atoms/top-nav-inner';
import BottomNavWrapper from './atoms/bottom-nav-wrapper';
import Company from './atoms/company';
import LogoSearchWrapper from './atoms/logo-search-wrapper';
import RightHandSide from './atoms/right-hand-side';
import SearchWrapper from './atoms/search-wrapper';
import UnorderedList from './atoms/unordered-list';
import ListItem from './atoms/list-item';
import MenuButton from './atoms/menu-button';
import IconTitle from './atoms/icon-title'; // Layout/position of ServiceTitle

var ServiceTitleWrapper = styled('div')(typography.font({
  size: 24
}), (_styled = {
  width: '50%'
}, _styled[MEDIA_QUERIES.LARGESCREEN] = {
  width: 'auto'
}, _styled)); // Layout/position of MenuButtonWrapper

var MenuButtonWrapper = styled('div')((_styled2 = {
  display: 'flex',
  justifyContent: 'flex-end',
  alignItems: 'flex-end',
  width: '50%'
}, _styled2[MEDIA_QUERIES.LARGESCREEN] = {
  width: 'auto'
}, _styled2)); // Provides a fallback for the mobile menu toggle
// functionality when javascrcipt is unavailable

var Input = styled('input')((_styled3 = {
  position: 'absolute',
  top: '-999em',
  ':checked + ul': {
    display: 'flex'
  }
}, _styled3[MEDIA_QUERIES.LARGESCREEN] = {
  display: 'none'
}, _styled3));
/**
 *
 * ### Usage
 *
 * TopNav with logo, service title and navigation items
 * ```jsx
 * import CrownIcon from '@govuk-react/icon-crown';
 * import SearchBox from '@govuk-react/search-box';
 * import TopNav, { asNavLinkAnchor, asTopNavAnchor } from '@govuk-react/top-nav';
 *
 * const LogoAnchor = asTopNavAnchor('a');
 * const NavAnchor = asNavLinkAnchor('a');
 *
 * const link = 'https://example.com?=1';
 *
 * const Company = (
 *   <LogoAnchor href={link} target="new">
 *     <TopNav.IconTitle icon={<CrownIcon width="36" height="32" />}>GOV.UK</TopNav.IconTitle>
 *   </LogoAnchor>
 * );
 *
 * const ServiceTitle = (
 *   <NavAnchor href={link} target="new">
 *     Service Title
 *   </NavAnchor>
 * );
 *
 * const Search = (
 *   <SearchBox placeholder="Search">hi</SearchBox>
 * );
 *
 * <TopNav company={Company} serviceTitle={ServiceTitle} search={Search} active={0}>
 *   <NavAnchor href="https://example.com?q=catdog" target="new">Navigation item #1</NavAnchor>
 *   <NavAnchor href="https://example.com?q=dogcat" target="new">Navigation item #2</NavAnchor>
 * </TopNav>
 * ```
 *
 * ```jsx
 * import { BrowserRouter, Link } from 'react-router-dom';
 * import CrownIcon from '@govuk-react/icon-crown';
 * import TopNav, { asLogoAnchor, asNavLinkAnchor } from '@govuk-react/top-nav';
 *
 * const LogoLink = asTopNavAnchor(Link);
 * const NavLink= asNavLinkAnchor(Link);
 *
 * const reactRouterLink = '/section';
 * const CompanyLink = (
 *   <LogoLink to={reactRouterLink}>
 *     <TopNav.IconTitle icon={<CrownIcon width="36" height="32" />}>GOV.UK</TopNav.IconTitle>
 *   </LogoLink>
 * );
 *
 * const ServiceTitleLink = (
 *   <NavLink to={reactRouterLink}>
 *     Service Title
 *   </NavLink>
 * );
 *
 * <BrowserRouter>
 *   <TopNav company={CompanyLink} serviceTitle={ServiceTitleLink} />
 * </BrowserRouter>
 * ```
 *
 * ### References:
 * - http://alphagov.github.io/govuk_template/example-proposition-menu.html
 * - https://design-system.service.gov.uk/components/header/
 *
 * ### TODO:
 * - TODO: this component is a work in progress and needs to more closely match existing examples
 * - TODO: is TopNav the right name? What's it called in other GDS styles/patterns?
 * - TODO: (The name Header is ambiguous)
 * - TODO: #205 Use context api and/or render props for `active` navigation items
 * - TODO: Vertical alignment here needs some work, perhaps should be its own component
 * - TODO: Icon should be lined up with font baseline, e.g. vertical-align: baseline
 */

var TopNav =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(TopNav, _Component);

  function TopNav() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "state", {
      navigationOpen: _this.props.defaultOpen
    });

    _defineProperty(_assertThisInitialized(_this), "toggleNavigationOpen", function () {
      _this.setState(function (prevState) {
        return {
          navigationOpen: !prevState.navigationOpen
        };
      });
    });

    return _this;
  }

  var _proto = TopNav.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        bgColor = _this$props.bgColor,
        color = _this$props.color,
        company = _this$props.company,
        serviceTitle = _this$props.serviceTitle,
        search = _this$props.search,
        children = _this$props.children,
        props = _objectWithoutPropertiesLoose(_this$props, ["bgColor", "color", "company", "serviceTitle", "search", "children"]);

    return React.createElement(React.Fragment, null, React.createElement(TopNavWrapper, _extends({
      bgColor: bgColor,
      color: color
    }, props), React.createElement(TopNavInner, null, React.createElement(LogoSearchWrapper, null, React.createElement(Company, null, company), search && React.createElement(SearchWrapper, null, search)), React.createElement(RightHandSide, null, React.createElement(ServiceTitleWrapper, null, serviceTitle), children && React.createElement(React.Fragment, null, React.createElement(MenuButtonWrapper, null, React.createElement(MenuButton, {
      open: this.state.navigationOpen,
      onClick: this.toggleNavigationOpen
    })), React.createElement(Input, {
      id: "govuk-react-menu-button",
      type: "checkbox",
      checked: this.state.navigationOpen
    }), React.createElement(UnorderedList, {
      id: "govuk-react-menu",
      serviceTitle: serviceTitle,
      open: this.state.navigationOpen
    }, children.length && children.map ? children.map(function (child, i) {
      return child && (child.length || child.props) ? React.createElement(ListItem, {
        key: child.key || i
      }, child) : null;
    }) : React.createElement(ListItem, null, children)))))), React.createElement(BottomNavWrapper, null));
  };

  return TopNav;
}(Component);

TopNav.defaultProps = {
  bgColor: BLACK,
  color: WHITE,
  company: React.createElement(IconTitle, {
    icon: React.createElement(CrownIcon, {
      width: "36",
      height: "32"
    })
  }, "GOV.UK"),
  serviceTitle: undefined,
  search: false,
  children: undefined,
  defaultOpen: false
}; // TODO: prop names should mirror nunjucks macro options at https://design-system.service.gov.uk/components/header/

TopNav.IconTitle = IconTitle;
export default TopNav;
import _asTopNavAnchor from './hoc/asTopNavAnchor';
export { _asTopNavAnchor as asTopNavAnchor };
import _asNavLinkAnchor from './hoc/asNavLinkAnchor';
export { _asNavLinkAnchor as asNavLinkAnchor };
//# sourceMappingURL=index.js.map