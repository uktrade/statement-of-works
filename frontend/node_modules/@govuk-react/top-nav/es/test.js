import React from 'react';
import ReactDOM from 'react-dom';
import { mount } from 'enzyme';
import CrownIcon from '@govuk-react/icon-crown';
import TopNav, { asTopNavAnchor, asNavLinkAnchor } from '.';
var emptyNode = [];
var nullNode = null;
var Anchor = asTopNavAnchor('a');
var NavLinkAnchor = asNavLinkAnchor('a');
var wrapper = React.createElement(TopNav, {
  company: "example",
  search: "example",
  serviceTitle: "example"
}, "example");
var wrapperMultipleTopNavAnchor = React.createElement(TopNav, {
  active: 1
}, React.createElement(Anchor, {
  href: "/section"
}, "Section 1"), React.createElement(Anchor, {
  href: "/section"
}, "Section 1"));
var wrapperNavLinkAnchor = React.createElement(TopNav, null, React.createElement(NavLinkAnchor, {
  href: "/nav-link"
}, "Nav link"));
var wrapperEmptyNode = React.createElement(TopNav, null, React.createElement(Anchor, {
  href: "/section"
}, "Section 1"), emptyNode, nullNode, "example");
var WrapperNavLinkAnchor = mount(wrapperNavLinkAnchor);
var WrapperMultipleTopNavAnchor = mount(wrapperMultipleTopNavAnchor);
describe('TopNav', function () {
  it('renders without crashing', function () {
    var div = document.createElement('div');
    ReactDOM.render(wrapper, div);
  });
  it('should render an unordered list without ghost/duff children', function () {
    expect(mount(wrapperEmptyNode).find('ul li')).toHaveLength(2);
  });
  it('matches the <TopNav> with multiple <Anchor> tags snapshot', function () {
    expect(WrapperMultipleTopNavAnchor).toMatchSnapshot('enzyme.mount');
  });
  it('matches the props passed to the list of Anchor tags', function () {
    WrapperMultipleTopNavAnchor.find(Anchor).forEach(function (anchor) {
      expect(anchor.props().href).toEqual('/section');
      expect(anchor.props().children).toEqual('Section 1');
    });
  });
  it('matches the <TopNav> with a <NavLinkAnchor> tag snapshot', function () {
    expect(WrapperNavLinkAnchor).toMatchSnapshot('enzyme.mount');
  });
  it('matches the props passed to NavLinkAnchor', function () {
    expect(WrapperNavLinkAnchor.find(NavLinkAnchor).props().href).toEqual('/nav-link');
    expect(WrapperNavLinkAnchor.find(NavLinkAnchor).props().children).toEqual('Nav link');
  });
  it('with icon title', function () {
    expect(mount(React.createElement(TopNav, {
      company: React.createElement(TopNav.IconTitle, {
        icon: React.createElement(CrownIcon, {
          width: "36",
          height: "32"
        })
      }, "GOV.UK")
    }))).toMatchSnapshot('icon title');
  });
});
//# sourceMappingURL=test.js.map