{"version":3,"sources":["../src/index.js"],"names":["React","Component","PropTypes","BLACK","WHITE","MEDIA_QUERIES","typography","CrownIcon","styled","TopNavWrapper","TopNavInner","BottomNavWrapper","Company","LogoSearchWrapper","RightHandSide","SearchWrapper","UnorderedList","ListItem","MenuButton","IconTitle","ServiceTitleWrapper","font","size","width","LARGESCREEN","MenuButtonWrapper","display","justifyContent","alignItems","Input","position","top","TopNav","navigationOpen","props","defaultOpen","setState","prevState","render","bgColor","color","company","serviceTitle","search","children","state","toggleNavigationOpen","length","map","child","i","key","defaultProps","undefined","asTopNavAnchor","asNavLinkAnchor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BLACK, WHITE } from 'govuk-colours';\nimport { MEDIA_QUERIES } from '@govuk-react/constants';\nimport { typography } from '@govuk-react/lib';\nimport CrownIcon from '@govuk-react/icon-crown';\n\nimport styled from 'styled-components';\n\nimport TopNavWrapper from './atoms/top-nav-wrapper';\nimport TopNavInner from './atoms/top-nav-inner';\nimport BottomNavWrapper from './atoms/bottom-nav-wrapper';\nimport Company from './atoms/company';\nimport LogoSearchWrapper from './atoms/logo-search-wrapper';\nimport RightHandSide from './atoms/right-hand-side';\nimport SearchWrapper from './atoms/search-wrapper';\nimport UnorderedList from './atoms/unordered-list';\nimport ListItem from './atoms/list-item';\nimport MenuButton from './atoms/menu-button';\n\nimport IconTitle from './atoms/icon-title';\n\n// Layout/position of ServiceTitle\nconst ServiceTitleWrapper = styled('div')(typography.font({ size: 24 }), {\n  width: '50%',\n  [MEDIA_QUERIES.LARGESCREEN]: {\n    width: 'auto',\n  },\n});\n\n// Layout/position of MenuButtonWrapper\nconst MenuButtonWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'flex-end',\n  width: '50%',\n  [MEDIA_QUERIES.LARGESCREEN]: {\n    width: 'auto',\n  },\n});\n\n// Provides a fallback for the mobile menu toggle\n// functionality when javascrcipt is unavailable\nconst Input = styled('input')({\n  position: 'absolute',\n  top: '-999em',\n  ':checked + ul': {\n    display: 'flex',\n  },\n  [MEDIA_QUERIES.LARGESCREEN]: {\n    display: 'none',\n  },\n});\n\n/**\n *\n * ### Usage\n *\n * TopNav with logo, service title and navigation items\n * ```jsx\n * import CrownIcon from '@govuk-react/icon-crown';\n * import SearchBox from '@govuk-react/search-box';\n * import TopNav, { asNavLinkAnchor, asTopNavAnchor } from '@govuk-react/top-nav';\n *\n * const LogoAnchor = asTopNavAnchor('a');\n * const NavAnchor = asNavLinkAnchor('a');\n *\n * const link = 'https://example.com?=1';\n *\n * const Company = (\n *   <LogoAnchor href={link} target=\"new\">\n *     <TopNav.IconTitle icon={<CrownIcon width=\"36\" height=\"32\" />}>GOV.UK</TopNav.IconTitle>\n *   </LogoAnchor>\n * );\n *\n * const ServiceTitle = (\n *   <NavAnchor href={link} target=\"new\">\n *     Service Title\n *   </NavAnchor>\n * );\n *\n * const Search = (\n *   <SearchBox placeholder=\"Search\">hi</SearchBox>\n * );\n *\n * <TopNav company={Company} serviceTitle={ServiceTitle} search={Search} active={0}>\n *   <NavAnchor href=\"https://example.com?q=catdog\" target=\"new\">Navigation item #1</NavAnchor>\n *   <NavAnchor href=\"https://example.com?q=dogcat\" target=\"new\">Navigation item #2</NavAnchor>\n * </TopNav>\n * ```\n *\n * ```jsx\n * import { BrowserRouter, Link } from 'react-router-dom';\n * import CrownIcon from '@govuk-react/icon-crown';\n * import TopNav, { asLogoAnchor, asNavLinkAnchor } from '@govuk-react/top-nav';\n *\n * const LogoLink = asTopNavAnchor(Link);\n * const NavLink= asNavLinkAnchor(Link);\n *\n * const reactRouterLink = '/section';\n * const CompanyLink = (\n *   <LogoLink to={reactRouterLink}>\n *     <TopNav.IconTitle icon={<CrownIcon width=\"36\" height=\"32\" />}>GOV.UK</TopNav.IconTitle>\n *   </LogoLink>\n * );\n *\n * const ServiceTitleLink = (\n *   <NavLink to={reactRouterLink}>\n *     Service Title\n *   </NavLink>\n * );\n *\n * <BrowserRouter>\n *   <TopNav company={CompanyLink} serviceTitle={ServiceTitleLink} />\n * </BrowserRouter>\n * ```\n *\n * ### References:\n * - http://alphagov.github.io/govuk_template/example-proposition-menu.html\n * - https://design-system.service.gov.uk/components/header/\n *\n * ### TODO:\n * - TODO: this component is a work in progress and needs to more closely match existing examples\n * - TODO: is TopNav the right name? What's it called in other GDS styles/patterns?\n * - TODO: (The name Header is ambiguous)\n * - TODO: #205 Use context api and/or render props for `active` navigation items\n * - TODO: Vertical alignment here needs some work, perhaps should be its own component\n * - TODO: Icon should be lined up with font baseline, e.g. vertical-align: baseline\n */\nclass TopNav extends Component {\n  state = {\n    navigationOpen: this.props.defaultOpen,\n  };\n\n  toggleNavigationOpen = () => {\n    this.setState(prevState => ({\n      navigationOpen: !prevState.navigationOpen,\n    }));\n  };\n\n  render() {\n    const { bgColor, color, company, serviceTitle, search, children, ...props } = this.props;\n\n    return (\n      <React.Fragment>\n        <TopNavWrapper bgColor={bgColor} color={color} {...props}>\n          <TopNavInner>\n            <LogoSearchWrapper>\n              <Company>{company}</Company>\n              {search && <SearchWrapper>{search}</SearchWrapper>}\n            </LogoSearchWrapper>\n            <RightHandSide>\n              <ServiceTitleWrapper>{serviceTitle}</ServiceTitleWrapper>\n              {children && (\n                <React.Fragment>\n                  <MenuButtonWrapper>\n                    <MenuButton open={this.state.navigationOpen} onClick={this.toggleNavigationOpen} />\n                  </MenuButtonWrapper>\n                  {/* Referenced in MenuButton */}\n                  <Input id=\"govuk-react-menu-button\" type=\"checkbox\" checked={this.state.navigationOpen} />\n                  <UnorderedList id=\"govuk-react-menu\" serviceTitle={serviceTitle} open={this.state.navigationOpen}>\n                    {/* TODO: #205 use context api and/or render props here for `active` */}\n                    {children.length && children.map ? (\n                      children.map((child, i) =>\n                        child && (child.length || child.props) ? (\n                          <ListItem key={child.key || i}>{child}</ListItem>\n                        ) : null\n                      )\n                    ) : (\n                      <ListItem>{children}</ListItem>\n                    )}\n                  </UnorderedList>\n                </React.Fragment>\n              )}\n            </RightHandSide>\n          </TopNavInner>\n        </TopNavWrapper>\n        <BottomNavWrapper />\n      </React.Fragment>\n    );\n  }\n}\n\nTopNav.defaultProps = {\n  bgColor: BLACK,\n  color: WHITE,\n  company: <IconTitle icon={<CrownIcon width=\"36\" height=\"32\" />}>GOV.UK</IconTitle>,\n  serviceTitle: undefined,\n  search: false,\n  children: undefined,\n  defaultOpen: false,\n};\n\n// TODO: prop names should mirror nunjucks macro options at https://design-system.service.gov.uk/components/header/\nTopNav.propTypes = {\n  /** Top nav background color */\n  bgColor: PropTypes.string,\n  /** Top nav text color */\n  color: PropTypes.string,\n  /** Is the mobile navigation open by default? */\n  defaultOpen: PropTypes.bool,\n  /** Company component e.g. GOV UK */\n  company: PropTypes.node,\n  /** Service title component e.g. Food Standards Authority */\n  serviceTitle: PropTypes.node,\n  /** Search component */\n  search: PropTypes.node,\n  /** List Navigation items with anchor tags e.g. NavAnchor components */\n  children: PropTypes.node,\n};\n\nTopNav.IconTitle = IconTitle;\n\nexport default TopNav;\n\nexport asTopNavAnchor from './hoc/asTopNavAnchor';\nexport asNavLinkAnchor from './hoc/asNavLinkAnchor';\n"],"file":"index.js"}