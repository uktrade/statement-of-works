{"version":3,"sources":["../src/test.js"],"names":["React","ReactDOM","mount","CrownIcon","TopNav","asTopNavAnchor","asNavLinkAnchor","emptyNode","nullNode","Anchor","NavLinkAnchor","wrapper","wrapperMultipleTopNavAnchor","wrapperNavLinkAnchor","wrapperEmptyNode","WrapperNavLinkAnchor","WrapperMultipleTopNavAnchor","describe","it","div","document","createElement","render","expect","find","toHaveLength","toMatchSnapshot","forEach","anchor","props","href","toEqual","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { mount } from 'enzyme';\nimport CrownIcon from '@govuk-react/icon-crown';\n\nimport TopNav, { asTopNavAnchor, asNavLinkAnchor } from '.';\n\nconst emptyNode = [];\nconst nullNode = null;\nconst Anchor = asTopNavAnchor('a');\nconst NavLinkAnchor = asNavLinkAnchor('a');\n\nconst wrapper = (\n  <TopNav company=\"example\" search=\"example\" serviceTitle=\"example\">\n    example\n  </TopNav>\n);\nconst wrapperMultipleTopNavAnchor = (\n  <TopNav active={1}>\n    <Anchor href=\"/section\">Section 1</Anchor>\n    <Anchor href=\"/section\">Section 1</Anchor>\n  </TopNav>\n);\n\nconst wrapperNavLinkAnchor = (\n  <TopNav>\n    <NavLinkAnchor href=\"/nav-link\">Nav link</NavLinkAnchor>\n  </TopNav>\n);\n\nconst wrapperEmptyNode = (\n  <TopNav>\n    <Anchor href=\"/section\">Section 1</Anchor>\n    {emptyNode}\n    {nullNode}\n    example\n  </TopNav>\n);\n\nconst WrapperNavLinkAnchor = mount(wrapperNavLinkAnchor);\nconst WrapperMultipleTopNavAnchor = mount(wrapperMultipleTopNavAnchor);\n\ndescribe('TopNav', () => {\n  it('renders without crashing', () => {\n    const div = document.createElement('div');\n    ReactDOM.render(wrapper, div);\n  });\n\n  it('should render an unordered list without ghost/duff children', () => {\n    expect(mount(wrapperEmptyNode).find('ul li')).toHaveLength(2);\n  });\n\n  it('matches the <TopNav> with multiple <Anchor> tags snapshot', () => {\n    expect(WrapperMultipleTopNavAnchor).toMatchSnapshot('enzyme.mount');\n  });\n\n  it('matches the props passed to the list of Anchor tags', () => {\n    WrapperMultipleTopNavAnchor.find(Anchor).forEach(anchor => {\n      expect(anchor.props().href).toEqual('/section');\n      expect(anchor.props().children).toEqual('Section 1');\n    });\n  });\n\n  it('matches the <TopNav> with a <NavLinkAnchor> tag snapshot', () => {\n    expect(WrapperNavLinkAnchor).toMatchSnapshot('enzyme.mount');\n  });\n\n  it('matches the props passed to NavLinkAnchor', () => {\n    expect(WrapperNavLinkAnchor.find(NavLinkAnchor).props().href).toEqual('/nav-link');\n    expect(WrapperNavLinkAnchor.find(NavLinkAnchor).props().children).toEqual('Nav link');\n  });\n\n  it('with icon title', () => {\n    expect(\n      mount(\n        <TopNav company={<TopNav.IconTitle icon={<CrownIcon width=\"36\" height=\"32\" />}>GOV.UK</TopNav.IconTitle>} />\n      )\n    ).toMatchSnapshot('icon title');\n  });\n});\n"],"file":"test.js"}