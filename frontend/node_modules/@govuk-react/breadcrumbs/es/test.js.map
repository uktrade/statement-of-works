{"version":3,"sources":["../src/test.js"],"names":["React","mount","Breadcrumbs","describe","it","wrapper","expect","find","toHaveLength","hasClass","toBe","is","toMatchSnapshot"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AAEA,OAAOC,WAAP,MAAwB,GAAxB;AAEAC,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BC,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,QAAMC,OAAO,GAAGJ,KAAK,CAAC,oBAAC,WAAD,kBAAD,CAArB;AAEAK,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,IAAb,CAAD,CAAN,CAA2BC,YAA3B,CAAwC,CAAxC;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACvD,QAAMC,OAAO,GAAGJ,KAAK,CACnB,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB,mBADF,YADmB,CAArB;AAOAK,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,OAAb,CAAD,CAAN,CAA8BC,YAA9B,CAA2C,CAA3C;AACD,GATC,CAAF;AAWAJ,EAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AACpE,QAAMC,OAAO,GAAGJ,KAAK,CACnB,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB,mBADF,EAEG;AAAG;AAFN,MAGG;AAAK;AAHR,gBADmB,CAArB;AASAK,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,OAAb,CAAD,CAAN,CAA8BC,YAA9B,CAA2C,CAA3C;AACD,GAXC,CAAF;AAaAJ,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtC,QAAMC,OAAO,GAAGJ,KAAK,CACnB,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAC;AAAjC,eADmB,CAArB;AAMAK,IAAAA,MAAM,CAACD,OAAO,CAACI,QAAR,CAAiB,MAAjB,CAAD,CAAN,CAAiCC,IAAjC,CAAsC,IAAtC;AACAJ,IAAAA,MAAM,CAACD,OAAO,CAACM,EAAR,CAAW,OAAX,CAAD,CAAN,CAA4BD,IAA5B,CAAiC,IAAjC;AACD,GATC,CAAF;AAWAN,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAC3B,QAAMC,OAAO,GAAGJ,KAAK,CACnB,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB,mBADF,EAEE,oBAAC,WAAD,CAAa,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB,mBAFF,CADmB,CAArB;AAOAK,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBO,eAAhB,CAAgC,aAAhC;AACD,GATC,CAAF;AAUD,CApDO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\n\nimport Breadcrumbs from '.';\n\ndescribe('breadcrumbs', () => {\n  it('should render an item in ordered list', () => {\n    const wrapper = mount(<Breadcrumbs>example</Breadcrumbs>);\n\n    expect(wrapper.find('ol')).toHaveLength(1);\n  });\n\n  it('should render multiple items in ordered list', () => {\n    const wrapper = mount(\n      <Breadcrumbs>\n        <Breadcrumbs.Link href=\"/section\">Section 1</Breadcrumbs.Link>\n        example\n      </Breadcrumbs>\n    );\n\n    expect(wrapper.find('ol li')).toHaveLength(2);\n  });\n\n  it('should render an ordered list without ghost/duff children', () => {\n    const wrapper = mount(\n      <Breadcrumbs>\n        <Breadcrumbs.Link href=\"/section\">Section 1</Breadcrumbs.Link>\n        {[] /* empty node */}\n        {null /* null node */}\n        example\n      </Breadcrumbs>\n    );\n\n    expect(wrapper.find('ol li')).toHaveLength(2);\n  });\n\n  it('allows attributes to be set', () => {\n    const wrapper = mount(\n      <Breadcrumbs id=\"test\" className=\"test\">\n        Crumb\n      </Breadcrumbs>\n    );\n\n    expect(wrapper.hasClass('test')).toBe(true);\n    expect(wrapper.is('#test')).toBe(true);\n  });\n\n  it('matches snapshot', () => {\n    const wrapper = mount(\n      <Breadcrumbs>\n        <Breadcrumbs.Link href=\"/section\">Section 1</Breadcrumbs.Link>\n        <Breadcrumbs.Link href=\"/section2\">Section 2</Breadcrumbs.Link>\n      </Breadcrumbs>\n    );\n\n    expect(wrapper).toMatchSnapshot('breadcrumbs');\n  });\n});\n"],"file":"test.js"}