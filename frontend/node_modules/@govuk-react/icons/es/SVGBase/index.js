function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';

var SVG = function SVG(_ref) {
  var children = _ref.children,
      fill = _ref.fill,
      title = _ref.title,
      rest = _objectWithoutPropertiesLoose(_ref, ["children", "fill", "title"]);

  return React.createElement("svg", _extends({
    version: "1.1",
    fill: fill,
    width: "100%",
    height: "100%",
    style: {
      display: 'block'
    }
  }, rest), React.createElement("title", null, title), children);
};

SVG.defaultProps = {
  children: undefined,
  title: undefined,
  fill: 'currentColor'
};
export default SVG;
//# sourceMappingURL=index.js.map