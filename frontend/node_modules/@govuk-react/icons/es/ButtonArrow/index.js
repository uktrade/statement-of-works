function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import SVG from '../SVGBase/index';

var ButtonArrow = function ButtonArrow(_ref) {
  var fill = _ref.fill,
      title = _ref.title,
      rest = _objectWithoutPropertiesLoose(_ref, ["fill", "title"]);

  return React.createElement(SVG, _extends({
    viewBox: "0 0 706 860",
    title: title,
    fill: fill
  }, rest), React.createElement("g", null, React.createElement("path", {
    d: "M.152 0h252.993l452.108 430H452.261z"
  }), React.createElement("path", {
    fillOpacity: "0.5",
    d: "M0 860h252.993L705.1 430H452.108z"
  })));
};

ButtonArrow.defaultProps = {
  title: 'ButtonArrow',
  fill: 'currentColor'
};
export default ButtonArrow;
//# sourceMappingURL=index.js.map