// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`details matches the Details snapshot: details 1`] = `
.c0 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  margin-bottom: 20px;
  display: block;
}

.c1 {
  display: inline-block;
  position: relative;
  margin-bottom: 5px;
  padding-left: 25px;
  color: #005ea5;
  cursor: pointer;
}

.c1:hover {
  color: #2b8cc4;
}

.c1:focus {
  outline: 4px solid #ffbf47;
  outline-offset: -1px;
  color: #0b0c0c;
  background: #ffbf47;
}

.c1::-webkit-details-marker {
  display: none;
}

.c1:before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  display: block;
  width: 0;
  height: 0;
  border-style: solid;
  border-color: transparent;
  -webkit-clip-path: polygon(0% 0%,100% 50%,0% 100%);
  clip-path: polygon(0% 0%,100% 50%,0% 100%);
  border-width: 7px 0 7px 12.124px;
  border-left-color: inherit;
}

[open] > .c1:before {
  display: block;
  width: 0;
  height: 0;
  border-style: solid;
  border-color: transparent;
  -webkit-clip-path: polygon(0% 0%,50% 100%,100% 0%);
  clip-path: polygon(0% 0%,50% 100%,100% 0%);
  border-width: 12.124px 7px 0 7px;
  border-top-color: inherit;
}

.c2 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c3 {
  padding: 15px;
  padding-left: 20px;
  border-left: 5px solid #bfc1c3;
}

.c3 p {
  margin-top: 0;
  margin-bottom: 20px;
}

.c3 > :last-child,
.c3 p:last-child {
  margin-bottom: 0;
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c0 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 30px;
  }
}

<DetailsSimple>
  <Details
    open={false}
    summary="Help with nationality"
  >
    <styled.details
      open={false}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                "color: #0b0c0c; @media print {
  color: #000;
}",
                [Function],
                "display: block;",
              ],
            },
            "displayName": "styled.details",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "details",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        open={false}
      >
        <details
          className="c0"
          open={false}
        >
          <styled.summary>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "display: inline-block; position: relative; margin-bottom: 5px; padding-left: 25px; color: #005ea5; cursor: pointer; :hover {
  color: #2b8cc4;
} :focus {
  outline: 4px solid #ffbf47; outline-offset: -1px; color: #0b0c0c; background: #ffbf47;
} ::-webkit-details-marker {
  display: none;
} :before {
  content: \\"\\"; position: absolute; top: 0; bottom: 0; left: 0; margin: auto; display: block; width: 0; height: 0; border-style: solid; border-color: transparent; clip-path: polygon(0% 0%, 100% 50%, 0% 100%); border-width: 7px 0 7px 12.124px; border-left-color: inherit; [open] > & {
  display: block; width: 0; height: 0; border-style: solid; border-color: transparent; clip-path: polygon(0% 0%, 50% 100%, 100% 0%); border-width: 12.124px 7px 0 7px; border-top-color: inherit;
}
}",
                    ],
                  },
                  "displayName": "styled.summary",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "summary",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <summary
                className="c1"
              >
                <styled.span>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "text-decoration: underline;",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="c2"
                    >
                      Help with nationality
                    </span>
                  </StyledComponent>
                </styled.span>
              </summary>
            </StyledComponent>
          </styled.summary>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": true,
                    "lastClassName": "c3",
                    "rules": Array [
                      "padding: 15px; padding-left: 20px; border-left: 5px solid #bfc1c3; p {
  margin-top: 0; margin-bottom: 20px;
} > :last-child, p:last-child {
  margin-bottom: 0;
}",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c3"
              >
                If youâ€™re not sure about your nationality, try to find out from an official document like a passport or national ID card.
              </div>
            </StyledComponent>
          </styled.div>
        </details>
      </StyledComponent>
    </styled.details>
  </Details>
</DetailsSimple>
`;
