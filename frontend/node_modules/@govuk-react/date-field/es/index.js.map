{"version":3,"sources":["../src/index.js"],"names":["React","PropTypes","styled","ERROR_COLOUR","SPACING","LabelText","ErrorText","HintText","spacing","Input","StyledContainer","display","flexDirection","errorText","borderLeft","marginRight","SCALE_3","paddingLeft","SCALE_2","undefined","withWhiteSpace","marginBottom","DateField","children","hintText","inputNames","defaultValues","input","props","defaultProps","day","month","year"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,eAAe,GAAGR,MAAM,CAAC,KAAD,CAAN,CACtB;AACES,EAAAA,OAAO,EAAE,MADX;AAEEC,EAAAA,aAAa,EAAE;AAFjB,CADsB,EAKtB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SACEA,SAAS,GACL;AACEC,IAAAA,UAAU,iBAAeX,YAD3B;AAEEY,IAAAA,WAAW,EAAEX,OAAO,CAACY,OAFvB;AAGEC,IAAAA,WAAW,EAAEb,OAAO,CAACc;AAHvB,GADK,GAMLC,SAPN;AAAA,CALsB,EAatBX,OAAO,CAACY,cAAR,CAAuB;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAAvB,CAbsB,CAAxB;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,MAAaV,SAAb,SAAaA,SAAb;AAAA,MAAwBW,QAAxB,SAAwBA,QAAxB;AAAA,MAAkCC,UAAlC,SAAkCA,UAAlC;AAAA,MAA8CC,aAA9C,SAA8CA,aAA9C;AAAA,MAA6DC,KAA7D,SAA6DA,KAA7D;AAAA,MAAuEC,KAAvE;;AAAA,SAChB,oBAAC,eAAD,eAAqBA,KAArB;AAA4B,IAAA,SAAS,EAAEf;AAAvC,MACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEA;AAAtB,KAAkCU,QAAlC,CADF,EAEGC,QAAQ,IAAI,oBAAC,QAAD,QAAWA,QAAX,CAFf,EAGGX,SAAS,IAAI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEA;AAAtB,KAAkCA,SAAlC,CAHhB,EAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEY,UADT,CAEE;AAFF;AAGE,IAAA,aAAa,EAAEC,aAHjB,CAIE;AAJF;AAKE,IAAA,KAAK,EAAE,CAAC,CAACb;AALX,KAMMc,KANN,EAJF,CADgB;AAAA,CAAlB;;AAgBAL,SAAS,CAACO,YAAV,GAAyB;AACvBL,EAAAA,QAAQ,EAAEL,SADa;AAEvBN,EAAAA,SAAS,EAAEM,SAFY;AAGvBM,EAAAA,UAAU,EAAE;AACVK,IAAAA,GAAG,EAAEX,SADK;AAEVY,IAAAA,KAAK,EAAEZ,SAFG;AAGVa,IAAAA,IAAI,EAAEb;AAHI,GAHW;AAQvBO,EAAAA,aAAa,EAAE;AACbI,IAAAA,GAAG,EAAEX,SADQ;AAEbY,IAAAA,KAAK,EAAEZ,SAFM;AAGba,IAAAA,IAAI,EAAEb;AAHO,GARQ;AAavBQ,EAAAA,KAAK,EAAER;AAbgB,CAAzB;AAoEA,eAAeG,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { ERROR_COLOUR } from 'govuk-colours';\nimport { SPACING } from '@govuk-react/constants';\nimport LabelText from '@govuk-react/label-text';\nimport ErrorText from '@govuk-react/error-text';\nimport HintText from '@govuk-react/hint-text';\nimport { spacing } from '@govuk-react/lib';\n\nimport Input from './input';\n\nconst StyledContainer = styled('div')(\n  {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  ({ errorText }) =>\n    errorText\n      ? {\n          borderLeft: `4px solid ${ERROR_COLOUR}`,\n          marginRight: SPACING.SCALE_3,\n          paddingLeft: SPACING.SCALE_2,\n        }\n      : undefined,\n  spacing.withWhiteSpace({ marginBottom: 6 })\n);\n\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * <DateField>What is your date of birth?</DateField>\n * ```\n *\n * Date with hint text\n * ```jsx\n * <DateField hintText=\"For example, 31 03 1980\">\n *   What is your date of birth?\n * </DateField>\n * ```\n *\n * Date with hint text & error\n * ```jsx\n * <DateField\n *   hintText=\"For example, 31 03 1980\"\n *   errorText=\"Error message goes here\"\n * >\n *   What is your date of birth?\n * </DateField>\n * ```\n *\n * With custom input name props\n * ```jsx\n * <DateField hintText=\"For example, 31 03 1980\"\n *   inputNames={{\n *     day: 'dayInputName',\n *     month: 'monthInputName',\n *     year: 'yearInputName',\n *   }}\n *  >\n *   What is your date of birth?\n * </DateField>\n * ```\n *\n * ### References:\n * - https://github.com/alphagov/govuk-frontend/tree/master/src/components/date-field\n *\n */\nconst DateField = ({ children, errorText, hintText, inputNames, defaultValues, input, ...props }) => (\n  <StyledContainer {...props} errorText={errorText}>\n    <LabelText errorText={errorText}>{children}</LabelText>\n    {hintText && <HintText>{hintText}</HintText>}\n    {errorText && <ErrorText errorText={errorText}>{errorText}</ErrorText>}\n    <Input\n      names={inputNames}\n      // TODO: defaultValues should be a prop on input\n      defaultValues={defaultValues}\n      // TODO: allow each individual input (day, month, year) to have a separate bool for error\n      error={!!errorText}\n      {...input}\n    />\n  </StyledContainer>\n);\n\nDateField.defaultProps = {\n  hintText: undefined,\n  errorText: undefined,\n  inputNames: {\n    day: undefined,\n    month: undefined,\n    year: undefined,\n  },\n  defaultValues: {\n    day: undefined,\n    month: undefined,\n    year: undefined,\n  },\n  input: undefined,\n};\n\nDateField.propTypes = {\n  children: PropTypes.node.isRequired,\n  /**\n   * Optional hint text\n   */\n  hintText: PropTypes.string,\n  /**\n   * Error text\n   */\n  errorText: PropTypes.string,\n  /**\n   * Input name attributes\n   */\n  inputNames: PropTypes.shape({\n    day: PropTypes.string,\n    month: PropTypes.string,\n    year: PropTypes.string,\n  }),\n  defaultValues: {\n    day: PropTypes.any,\n    month: PropTypes.any,\n    year: PropTypes.any,\n  },\n  /**\n   * Properties that are sent to the input, matching final form and redux form input type\n   */\n  input: PropTypes.shape({\n    /**\n     * Called when the day, month or year changes\n     */\n    onChange: PropTypes.func,\n    /**\n     * Called when the day, month or year fields are blurred\n     * (does not get called when moving between inputs in the same datefield)\n     */\n    onBlur: PropTypes.func,\n    /**\n     * Called when the day, month or year fields are focussed\n     * (does not get called when moving between inputs in the same datefield)\n     */\n    onFocus: PropTypes.func,\n    /**\n     * When the form field is controlled, this sets the value of the day, month and year inputs\n     */\n    value: PropTypes.shape({\n      day: PropTypes.string,\n      month: PropTypes.string,\n      year: PropTypes.string,\n    }),\n  }),\n};\n\nexport default DateField;\n"],"file":"index.js"}