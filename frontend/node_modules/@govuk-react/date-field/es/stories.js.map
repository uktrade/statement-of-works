{"version":3,"sources":["../src/stories.js"],"names":["React","PropTypes","storiesOf","withDocsCustom","action","DateField","ReadMe","stories","module","examples","ManagedDateField","value","day","month","year","render","input","props","state","onChange","setState","Component","defaultProps","addDecorator","add","onFocus","onBlur"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,OAAOC,SAAP,MAAsB,GAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,OAAO,GAAGL,SAAS,CAAC,iBAAD,EAAoBM,MAApB,CAAzB;AACA,IAAMC,QAAQ,GAAGP,SAAS,CAAC,0BAAD,EAA6BM,MAA7B,CAA1B;;IAEME,gB;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,GAAG,EAAE,CADA;AAELC,QAAAA,KAAK,EAAE,CAFF;AAGLC,QAAAA,IAAI,EAAE;AAHD;AADD,K;;;;;;;SAQRC,M,GAAA,kBAAS;AAAA;;AACP,QAAMC,KAAK,qBACN,KAAKC,KAAL,CAAWD,KADL;AAETL,MAAAA,KAAK,EAAE,KAAKO,KAAL,CAAWP,KAFT;AAGTQ,MAAAA,QAAQ,EAAE,kBAAAR,KAAK,EAAI;AACjB,QAAA,MAAI,CAACS,QAAL,CAAc;AACZT,UAAAA,KAAK,EAALA;AADY,SAAd;AAGD;AAPQ,MAAX;;AASA,WAAO,oBAAC,SAAD,eAAe,KAAKM,KAApB;AAA2B,MAAA,KAAK,EAAED;AAAlC,OAAP;AACD,G;;;EApB4BhB,KAAK,CAACqB,S;;AAuBrCX,gBAAgB,CAACY,YAAjB,GAAgC;AAC9BN,EAAAA,KAAK,EAAE;AADuB,CAAhC;AAQAT,OAAO,CAACgB,YAAR,CAAqBpB,cAAc,CAACG,MAAD,CAAnC;AAEAC,OAAO,CAACiB,GAAR,CAAY,mBAAZ,EAAiC;AAAA,SAC/B,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAErB,MAAM,CAAC,YAAD,CADV;AAELsB,MAAAA,MAAM,EAAEtB,MAAM,CAAC,WAAD,CAFT;AAGLe,MAAAA,QAAQ,EAAEf,MAAM,CAAC,aAAD;AAHX,KADT;AAME,IAAA,UAAU,EAAE;AAAEQ,MAAAA,GAAG,EAAE;AAAP;AANd,mCAD+B;AAAA,CAAjC;AAaAH,QAAQ,CAACe,GAAT,CAAa,qBAAb,EAAoC;AAAA,SAClC,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC;AAApB,mCADkC;AAAA,CAApC;AAIAf,QAAQ,CAACe,GAAT,CAAa,0BAAb,EAAyC;AAAA,SACvC,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAE;AAAEZ,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,KAAK,EAAE,IAApB;AAA0BC,MAAAA,IAAI,EAAE;AAAhC;AAA1B,oCADuC;AAAA,CAAzC;AAIAL,QAAQ,CAACe,GAAT,CAAa,6BAAb,EAA4C;AAAA,SAC1C,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,yBAApB;AAA8C,IAAA,SAAS,EAAC;AAAxD,mCAD0C;AAAA,CAA5C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { storiesOf } from '@storybook/react';\nimport { withDocsCustom } from '@govuk-react/storybook-components';\nimport { action } from '@storybook/addon-actions';\n\nimport DateField from '.';\nimport ReadMe from '../README.md';\n\nconst stories = storiesOf('Form/Date field', module);\nconst examples = storiesOf('Form/Date field/Examples', module);\n\nclass ManagedDateField extends React.Component {\n  state = {\n    value: {\n      day: 0,\n      month: 1,\n      year: 2,\n    },\n  };\n\n  render() {\n    const input = {\n      ...this.props.input,\n      value: this.state.value,\n      onChange: value => {\n        this.setState({\n          value,\n        });\n      },\n    };\n    return <DateField {...this.props} input={input} />;\n  }\n}\n\nManagedDateField.defaultProps = {\n  input: {},\n};\n\nManagedDateField.propTypes = {\n  input: PropTypes.shape({}),\n};\n\nstories.addDecorator(withDocsCustom(ReadMe));\n\nstories.add('Component default', () => (\n  <ManagedDateField\n    input={{\n      onFocus: action('date-focus'),\n      onBlur: action('date-blur'),\n      onChange: action('date-change'),\n    }}\n    inputNames={{ day: 'dayInputName' }}\n  >\n    What is your date of birth?\n  </ManagedDateField>\n));\n\nexamples.add('Date with hint text', () => (\n  <DateField hintText=\"For example, 31 03 1980\">What is your date of birth?</DateField>\n));\n\nexamples.add('Date with default values', () => (\n  <DateField defaultValues={{ day: '01', month: '02', year: '2018' }}>What is your date of birth ?</DateField>\n));\n\nexamples.add('Date with hint text & error', () => (\n  <DateField hintText=\"For example, 31 03 1980\" errorText=\"Error message goes here\">\n    What is your date of birth?\n  </DateField>\n));\n"],"file":"stories.js"}