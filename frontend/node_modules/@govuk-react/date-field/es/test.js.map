{"version":3,"sources":["../src/test.js"],"names":["React","ReactDOM","shallow","mount","DateField","describe","example","wrapper","props","beforeEach","children","it","div","document","createElement","render","output","expect","find","toBeTruthy","day","toHaveLength","month","toMatchSnapshot","value","year","first","toBe","spy","jest","fn","simulate","toHaveBeenCalledTimes","inst","onFocus","input1","input2","at","relatedTarget","instance"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,QAA/B;AAEA,OAAOC,SAAP,MAAsB,GAAtB,C,CAEA;;AAEAC,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1B,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,OAAO,GAAG,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED;AAAtB,KAAgCA,OAAhC,CAAhB;AACA,MAAIE,KAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACfD,IAAAA,KAAK,GAAG;AACNE,MAAAA,QAAQ,EAAEJ;AADJ,KAAR;AAGD,GAJS,CAAV;AAMAK,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnC,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAb,IAAAA,QAAQ,CAACc,MAAT,CACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAET,OAAtB;AAA+B,MAAA,QAAQ,EAAEA;AAAzC,OACGA,OADH,CADF,EAIEM,GAJF;AAMD,GARC,CAAF;AAUAD,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,QAAMK,MAAM,GAAGd,OAAO,CAACK,OAAD,CAAtB;AACAU,IAAAA,MAAM,CAACD,MAAM,CAACE,IAAP,CAAY,oBAAZ,CAAD,CAAN,CAA0CC,UAA1C;AACD,GAHC,CAAF;AAKAR,EAAAA,EAAE,CAAC,iFAAD,EAAoF,YAAM;AAC1F,QAAMK,MAAM,GAAGb,KAAK,CAClB,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAE;AAAEiB,QAAAA,GAAG,EAAE;AAAP,OAAvB;AAAgD,MAAA,SAAS,EAAEd;AAA3D,OACGA,OADH,CADkB,CAApB;AAKAW,IAAAA,MAAM,CAACD,MAAM,CAACE,IAAP,CAAY,aAAZ,CAAD,CAAN,CAAmCG,YAAnC,CAAgD,CAAhD;AACD,GAPC,CAAF;AASAV,EAAAA,EAAE,CAAC,0EAAD,EAA6E,YAAM;AACnF,QAAMK,MAAM,GAAGb,KAAK,CAACI,OAAD,CAApB;AACAU,IAAAA,MAAM,CAACD,MAAM,CAACE,IAAP,CAAY,qBAAZ,CAAD,CAAN,CAA2CG,YAA3C,CAAwD,CAAxD;AACD,GAHC,CAAF;AAKAV,EAAAA,EAAE,CAAC,2EAAD,EAA8E,YAAM;AACpF,QAAMK,MAAM,GAAGb,KAAK,CAClB,oBAAC,SAAD;AAAW,MAAA,aAAa,EAAE;AAAEiB,QAAAA,GAAG,EAAE,GAAP;AAAYE,QAAAA,KAAK,EAAE;AAAnB,OAA1B;AAAoD,MAAA,SAAS,EAAEhB;AAA/D,OACGA,OADH,CADkB,CAApB;AAKAW,IAAAA,MAAM,CAACD,MAAM,CAACE,IAAP,CAAY,qBAAZ,CAAD,CAAN,CAA2CG,YAA3C,CAAwD,CAAxD;AACD,GAPC,CAAF;AASAV,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AAChC,QAAMK,MAAM,GAAGd,OAAO,CAACK,OAAD,CAAtB;AACAU,IAAAA,MAAM,CAACD,MAAM,CAACE,IAAP,CAAY,OAAZ,CAAD,CAAN,CAA6BC,UAA7B;AACD,GAHC,CAAF;AAKAR,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAClCM,IAAAA,MAAM,CAACd,KAAK,CAACI,OAAD,CAAN,CAAN,CAAuBgB,eAAvB,CAAuC,eAAvC;AACD,GAFC,CAAF;AAIAZ,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMK,MAAM,GAAGb,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEqB,QAAAA,KAAK,EAAE;AAAEJ,UAAAA,GAAG,EAAE,GAAP;AAAYE,UAAAA,KAAK,EAAE,GAAnB;AAAwBG,UAAAA,IAAI,EAAE;AAA9B;AAAT;AAAlB,MAAD,CAApB;AACAR,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeO,eAAf,CAA+B,aAA/B;AACAN,IAAAA,MAAM,CACJD,MAAM,CACHE,IADH,CACQ,OADR,EAEGQ,KAFH,GAGGlB,KAHH,GAGWgB,KAJP,CAAN,CAKEG,IALF,CAKO,GALP;AAMD,GATC,CAAF;AAWAhB,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpC,QAAMK,MAAM,GAAGb,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEqB,QAAAA,KAAK,EAAE;AAAT;AAAlB,MAAD,CAApB;AACAP,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeO,eAAf,CAA+B,YAA/B;AACD,GAHC,CAAF;AAKAZ,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/CM,IAAAA,MAAM,CAACd,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEG;AAAtB,OAAgCA,OAAhC,CAAD,CAAL,CAA4DY,IAA5D,CAAiE,OAAjE,CAAD,CAAN,CAAkFG,YAAlF,CAA+F,CAA/F;AACAJ,IAAAA,MAAM,CAACd,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAEG;AAArB,OAA+BA,OAA/B,CAAD,CAAL,CAA2DY,IAA3D,CAAgE,KAAhE,CAAD,CAAN,CAA+EG,YAA/E,CAA4F,CAA5F;AACD,GAHC,CAAF;AAKAV,EAAAA,EAAE,CAAC,iEAAD,EAAoE,YAAM;AAC1EM,IAAAA,MAAM,CAACV,OAAO,CAACC,KAAR,CAAcE,QAAf,CAAN,CAA+BiB,IAA/B,CAAoCnB,KAAK,CAACE,QAA1C;AACD,GAFC,CAAF;AAIAC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAM;AACvB,QAAMiB,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;AAEA3B,IAAAA,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEyB;AAAnB,MAAD,CAAL,CACGV,IADH,CACQ,OADR,EAEGQ,KAFH,GAGGK,QAHH,CAGY,MAHZ;AAIAd,IAAAA,MAAM,CAACW,GAAD,CAAN,CAAYI,qBAAZ,CAAkC,CAAlC;AACD,GARC,CAAF;AAUArB,EAAAA,EAAE,CAAC,eAAD,EAAkB,YAAM;AACxB,QAAMiB,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;AAEA3B,IAAAA,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEyB;AAApB,MAAD,CAAL,CACGV,IADH,CACQ,OADR,EAEGQ,KAFH,GAGGK,QAHH,CAGY,OAHZ;AAIAd,IAAAA,MAAM,CAACW,GAAD,CAAN,CAAYI,qBAAZ,CAAkC,CAAlC;AACD,GARC,CAAF;AAUArB,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,QAAMiB,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;AAEA,QAAMG,IAAI,GAAG9B,KAAK,CAChB,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AACL+B,QAAAA,OAAO,EAAE,mBAAa;AACpBN,UAAAA,GAAG,MAAH;AACD;AAHI;AADT,MADgB,CAAlB;AASA,QAAMO,MAAM,GAAGF,IAAI,CAACf,IAAL,CAAU,OAAV,EAAmBQ,KAAnB,EAAf;AACA,QAAMU,MAAM,GAAGH,IAAI,CAACf,IAAL,CAAU,OAAV,EAAmBmB,EAAnB,CAAsB,CAAtB,CAAf,CAb4D,CAe5D;;AACAF,IAAAA,MAAM,CAACJ,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAhB4D,CAiB5D;;AACAI,IAAAA,MAAM,CAACJ,QAAP,CAAgB,MAAhB,EAAwB;AACtBO,MAAAA,aAAa,EAAEF,MAAM,CAACG,QAAP,EADO,CACY;;AADZ,KAAxB,EAlB4D,CAqB5D;;AACAH,IAAAA,MAAM,CAACL,QAAP,CAAgB,OAAhB,EAAyB;AACvBO,MAAAA,aAAa,EAAEH,MAAM,CAACI,QAAP,EADQ,CACW;;AADX,KAAzB;AAGAtB,IAAAA,MAAM,CAACW,GAAD,CAAN,CAAYI,qBAAZ,CAAkC,CAAlC;AACD,GA1BC,CAAF;AA4BArB,EAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAM;AACzB,QAAMiB,GAAG,GAAGC,IAAI,CAACC,EAAL,EAAZ;AAEA3B,IAAAA,KAAK,CAAC,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAEyB;AAArB,MAAD,CAAL,CACGV,IADH,CACQ,OADR,EAEGQ,KAFH,GAGGK,QAHH,CAGY,QAHZ;AAIAd,IAAAA,MAAM,CAACW,GAAD,CAAN,CAAYI,qBAAZ,CAAkC,CAAlC;AACD,GARC,CAAF,CAnI0B,CA6I1B;AACA;AACA;AACA;AACD,CAjJO,CAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { shallow, mount } from 'enzyme';\n\nimport DateField from '.';\n\n// TODO: all snapshot tests in this file should be moved to fixtures and included in stories\n\ndescribe('DateField', () => {\n  const example = 'example';\n  const wrapper = <DateField errorText={example}>{example}</DateField>;\n  let props;\n\n  beforeEach(() => {\n    props = {\n      children: example,\n    };\n  });\n\n  it('renders without crashing', () => {\n    const div = document.createElement('div');\n    ReactDOM.render(\n      <DateField errorText={example} hintText={example}>\n        {example}\n      </DateField>,\n      div\n    );\n  });\n\n  it('should render an input type=\"text\"', () => {\n    const output = shallow(wrapper);\n    expect(output.find('input[type=\"text\"]')).toBeTruthy();\n  });\n\n  it('should render one input with name attributes if only a day input name is passed', () => {\n    const output = mount(\n      <DateField inputNames={{ day: 'dayInputName' }} errorText={example}>\n        {example}\n      </DateField>\n    );\n    expect(output.find('input[name]')).toHaveLength(1);\n  });\n\n  it('should render no defaultValue attributes if defaultValues are not passed', () => {\n    const output = mount(wrapper);\n    expect(output.find('input[defaultValue]')).toHaveLength(0);\n  });\n\n  it('should render two defaultValue attributes if two defaultValues are passed', () => {\n    const output = mount(\n      <DateField defaultValues={{ day: '1', month: '2' }} errorText={example}>\n        {example}\n      </DateField>\n    );\n    expect(output.find('input[defaultValue]')).toHaveLength(2);\n  });\n\n  it('should render a label', () => {\n    const output = shallow(wrapper);\n    expect(output.find('label')).toBeTruthy();\n  });\n\n  it('matches wrappersnapshot', () => {\n    expect(mount(wrapper)).toMatchSnapshot('wrapper mount');\n  });\n\n  it('should support setting value', () => {\n    const output = mount(<DateField input={{ value: { day: '1', month: '2', year: '3' } }} />);\n    expect(output).toMatchSnapshot('value 1 2 3');\n    expect(\n      output\n        .find('input')\n        .first()\n        .props().value\n    ).toBe('1');\n  });\n\n  it('should support null value', () => {\n    const output = mount(<DateField input={{ value: null }} />);\n    expect(output).toMatchSnapshot('null value');\n  });\n\n  it('passes `props` to the rendered label', () => {\n    expect(mount(<DateField errorText={example}>{example}</DateField>).find('input')).toHaveLength(3);\n    expect(mount(<DateField hintText={example}>{example}</DateField>).find('div')).toHaveLength(2);\n  });\n\n  it('passes `props.children` to the rendered `wrapper` as `children`', () => {\n    expect(wrapper.props.children).toBe(props.children);\n  });\n\n  it('calls onBlur', () => {\n    const spy = jest.fn();\n\n    mount(<DateField onBlur={spy} />)\n      .find('input')\n      .first()\n      .simulate('blur');\n    expect(spy).toHaveBeenCalledTimes(1);\n  });\n\n  it('calls onFocus', () => {\n    const spy = jest.fn();\n\n    mount(<DateField onFocus={spy} />)\n      .find('input')\n      .first()\n      .simulate('focus');\n    expect(spy).toHaveBeenCalledTimes(1);\n  });\n\n  it('does not call onFocus when moving between fields ', () => {\n    const spy = jest.fn();\n\n    const inst = mount(\n      <DateField\n        input={{\n          onFocus: (...rest) => {\n            spy(...rest);\n          },\n        }}\n      />\n    );\n    const input1 = inst.find('input').first();\n    const input2 = inst.find('input').at(1);\n\n    // Focus first input\n    input1.simulate('focus', {});\n    // Then simulate tab to second input, first by blurring first input\n    input1.simulate('blur', {\n      relatedTarget: input2.instance(), // relatedTarget for blur is what will next receive focus\n    });\n    // Then focus the new input\n    input2.simulate('focus', {\n      relatedTarget: input1.instance(), // relatedTarget for focus is what has lost focus\n    });\n    expect(spy).toHaveBeenCalledTimes(1);\n  });\n\n  it('calls onChange', () => {\n    const spy = jest.fn();\n\n    mount(<DateField onChange={spy} />)\n      .find('input')\n      .first()\n      .simulate('change');\n    expect(spy).toHaveBeenCalledTimes(1);\n  });\n\n  // TODO: works controlled and uncontrolled\n  // TODO: onBlur, onChange, onFocus work as expected when tabbing between fields,\n  //       both controlled and uncontrolled\n  // TODO: defaultValues work controlled and uncontrolled\n});\n"],"file":"test.js"}