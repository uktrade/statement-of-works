{"version":3,"sources":["../src/test.js"],"names":["React","mount","Header","H1","H2","H3","H4","H5","H6","describe","OLD_ENV","process","env","nativeWarn","console","warn","nativeError","error","warnCallCount","beforeEach","jest","resetModules","afterEach","it","NODE_ENV","expect","not","toEqual","toThrow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\n\nimport Header from '.';\nimport { H1, H2, H3, H4, H5, H6 } from './presets';\n\ndescribe('Header', () => {\n  // Capture console.warn and console.error, as this is deprecated and produces errors\n  const OLD_ENV = process.env;\n  // eslint-disable-next-line no-console\n  const nativeWarn = console.warn;\n  // eslint-disable-next-line no-console\n  const nativeError = console.error;\n  let warnCallCount;\n  beforeEach(() => {\n    jest.resetModules();\n    process.env = { ...OLD_ENV };\n    // eslint-disable-next-line no-console\n    console.warn = () => {\n      warnCallCount += 1;\n    };\n    // eslint-disable-next-line no-console\n    console.error = () => {};\n    warnCallCount = 0;\n  });\n\n  afterEach(() => {\n    // eslint-disable-next-line no-console\n    console.warn = nativeWarn;\n    // eslint-disable-next-line no-console\n    console.error = nativeError;\n    process.env = OLD_ENV;\n  });\n\n  it('produces deprecation warning', () => {\n    process.env.NODE_ENV = 'development';\n\n    mount(<Header>example</Header>);\n    mount(<Header size=\"SMALL\">Test</Header>);\n    mount(<Header size={16}>Test</Header>);\n    mount(<H1>example</H1>);\n    mount(<H2>example</H2>);\n    mount(<H3>example</H3>);\n    mount(<H4>example</H4>);\n    mount(<H5>example</H5>);\n    mount(<H6>example</H6>);\n\n    expect(warnCallCount).not.toEqual(0);\n  });\n\n  it('throws an error if an unsupported size is used', () => {\n    expect(() => {\n      mount(<Header size={0}>example</Header>);\n    }).toThrow();\n    expect(() => {\n      mount(<Header size={1}>example</Header>);\n    }).toThrow();\n    expect(() => {\n      mount(<Header size={99999}>example</Header>);\n    }).toThrow();\n    expect(() => {\n      mount(<Header size=\"test\">example</Header>);\n    }).toThrow();\n  });\n});\n"],"file":"test.js"}