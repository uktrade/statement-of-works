function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// https://govuk-elements.herokuapp.com/errors/
// https://govuk-elements.herokuapp.com/errors/example-form-validation-single-question-radio
// This is to be used when more than one value of a radio/checkbox group requires validation.
// e.g. What is your gender?
// () Male
// () Female
// () Other
// Only one is valid, but at least one must be selected.
// Therefore validation around the set of radios is required.
import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { ERROR_COLOUR } from 'govuk-colours';
import LabelText from '@govuk-react/label-text';
import ErrorText from '@govuk-react/error-text';
import HintText from '@govuk-react/hint-text';
import { BORDER_WIDTH_MOBILE, SPACING } from '@govuk-react/constants';
import { spacing } from '@govuk-react/lib';
var StyledFieldset = styled('div')({
  padding: 0,
  margin: 0,
  border: 0,
  boxSizing: 'border-box',
  width: '100%',
  ':after': {
    content: "''",
    display: 'table',
    clear: 'both'
  }
}, function (_ref) {
  var error = _ref.error;
  return {
    borderLeft: error ? BORDER_WIDTH_MOBILE + " solid " + ERROR_COLOUR : undefined,
    marginRight: error ? SPACING.SCALE_3 : undefined,
    paddingLeft: error ? SPACING.SCALE_2 : undefined
  };
}, spacing.withWhiteSpace({
  marginBottom: 0
}));
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * import Radio from '@govuk-react/radio';
 *
 * <MultiChoice label="example">
 *    <Radio name="group1" inline>
 *      Yes
 *    </Radio>
 *    <Radio name="group1" inline>
 *      No
 *    </Radio>
 * </MultiChoice>
 * ```
 *
 * ### References:
 * - https://govuk-elements.herokuapp.com/errors/
 * - https://govuk-elements.herokuapp.com/errors/example-form-validation-single-question-radio
 *
 */

var MultiChoice = function MultiChoice(_ref2) {
  var meta = _ref2.meta,
      label = _ref2.label,
      children = _ref2.children,
      hint = _ref2.hint,
      props = _objectWithoutPropertiesLoose(_ref2, ["meta", "label", "children", "hint"]);

  return React.createElement(StyledFieldset, _extends({
    error: meta.touched && meta.error
  }, props), React.createElement(LabelText, null, label), hint && React.createElement(HintText, null, hint), meta.touched && meta.error && React.createElement(ErrorText, null, meta.error), children);
};

MultiChoice.defaultProps = {
  hint: undefined,
  meta: {}
};
export default MultiChoice;
//# sourceMappingURL=index.js.map