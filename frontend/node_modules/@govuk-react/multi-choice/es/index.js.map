{"version":3,"sources":["../src/index.js"],"names":["React","PropTypes","styled","ERROR_COLOUR","LabelText","ErrorText","HintText","BORDER_WIDTH_MOBILE","SPACING","spacing","StyledFieldset","padding","margin","border","boxSizing","width","content","display","clear","error","borderLeft","undefined","marginRight","SCALE_3","paddingLeft","SCALE_2","withWhiteSpace","marginBottom","MultiChoice","meta","label","children","hint","props","touched","defaultProps"],"mappings":";;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,mBAAT,EAA8BC,OAA9B,QAA6C,wBAA7C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,IAAMC,cAAc,GAAGR,MAAM,CAAC,KAAD,CAAN,CACrB;AACES,EAAAA,OAAO,EAAE,CADX;AAEEC,EAAAA,MAAM,EAAE,CAFV;AAGEC,EAAAA,MAAM,EAAE,CAHV;AAIEC,EAAAA,SAAS,EAAE,YAJb;AAKEC,EAAAA,KAAK,EAAE,MALT;AAME,YAAU;AACRC,IAAAA,OAAO,EAAE,IADD;AAERC,IAAAA,OAAO,EAAE,OAFD;AAGRC,IAAAA,KAAK,EAAE;AAHC;AANZ,CADqB,EAarB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAgB;AACdC,IAAAA,UAAU,EAAED,KAAK,GAAMZ,mBAAN,eAAmCJ,YAAnC,GAAoDkB,SADvD;AAEdC,IAAAA,WAAW,EAAEH,KAAK,GAAGX,OAAO,CAACe,OAAX,GAAqBF,SAFzB;AAGdG,IAAAA,WAAW,EAAEL,KAAK,GAAGX,OAAO,CAACiB,OAAX,GAAqBJ;AAHzB,GAAhB;AAAA,CAbqB,EAkBrBZ,OAAO,CAACiB,cAAR,CAAuB;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAAvB,CAlBqB,CAAvB;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,MAASC,KAAT,SAASA,KAAT;AAAA,MAAgBC,QAAhB,SAAgBA,QAAhB;AAAA,MAA0BC,IAA1B,SAA0BA,IAA1B;AAAA,MAAmCC,KAAnC;;AAAA,SAClB,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEJ,IAAI,CAACK,OAAL,IAAgBL,IAAI,CAACV;AAA5C,KAAuDc,KAAvD,GACE,oBAAC,SAAD,QAAYH,KAAZ,CADF,EAEGE,IAAI,IAAI,oBAAC,QAAD,QAAWA,IAAX,CAFX,EAGGH,IAAI,CAACK,OAAL,IAAgBL,IAAI,CAACV,KAArB,IAA8B,oBAAC,SAAD,QAAYU,IAAI,CAACV,KAAjB,CAHjC,EAIGY,QAJH,CADkB;AAAA,CAApB;;AASAH,WAAW,CAACO,YAAZ,GAA2B;AACzBH,EAAAA,IAAI,EAAEX,SADmB;AAEzBQ,EAAAA,IAAI,EAAE;AAFmB,CAA3B;AA0BA,eAAeD,WAAf","sourcesContent":["// https://govuk-elements.herokuapp.com/errors/\n// https://govuk-elements.herokuapp.com/errors/example-form-validation-single-question-radio\n\n// This is to be used when more than one value of a radio/checkbox group requires validation.\n// e.g. What is your gender?\n// () Male\n// () Female\n// () Other\n\n// Only one is valid, but at least one must be selected.\n// Therefore validation around the set of radios is required.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { ERROR_COLOUR } from 'govuk-colours';\nimport LabelText from '@govuk-react/label-text';\nimport ErrorText from '@govuk-react/error-text';\nimport HintText from '@govuk-react/hint-text';\n\nimport { BORDER_WIDTH_MOBILE, SPACING } from '@govuk-react/constants';\nimport { spacing } from '@govuk-react/lib';\n\nconst StyledFieldset = styled('div')(\n  {\n    padding: 0,\n    margin: 0,\n    border: 0,\n    boxSizing: 'border-box',\n    width: '100%',\n    ':after': {\n      content: \"''\",\n      display: 'table',\n      clear: 'both',\n    },\n  },\n  ({ error }) => ({\n    borderLeft: error ? `${BORDER_WIDTH_MOBILE} solid ${ERROR_COLOUR}` : undefined,\n    marginRight: error ? SPACING.SCALE_3 : undefined,\n    paddingLeft: error ? SPACING.SCALE_2 : undefined,\n  }),\n  spacing.withWhiteSpace({ marginBottom: 0 })\n);\n\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * import Radio from '@govuk-react/radio';\n *\n * <MultiChoice label=\"example\">\n *    <Radio name=\"group1\" inline>\n *      Yes\n *    </Radio>\n *    <Radio name=\"group1\" inline>\n *      No\n *    </Radio>\n * </MultiChoice>\n * ```\n *\n * ### References:\n * - https://govuk-elements.herokuapp.com/errors/\n * - https://govuk-elements.herokuapp.com/errors/example-form-validation-single-question-radio\n *\n */\nconst MultiChoice = ({ meta, label, children, hint, ...props }) => (\n  <StyledFieldset error={meta.touched && meta.error} {...props}>\n    <LabelText>{label}</LabelText>\n    {hint && <HintText>{hint}</HintText>}\n    {meta.touched && meta.error && <ErrorText>{meta.error}</ErrorText>}\n    {children}\n  </StyledFieldset>\n);\n\nMultiChoice.defaultProps = {\n  hint: undefined,\n  meta: {},\n};\n\nMultiChoice.propTypes = {\n  meta: PropTypes.shape({\n    active: PropTypes.bool,\n    dirty: PropTypes.bool,\n    dirtySinceLastSubmit: PropTypes.bool,\n    error: PropTypes.any,\n    initial: PropTypes.any,\n    invalid: PropTypes.bool,\n    pristine: PropTypes.bool,\n    submitError: PropTypes.any,\n    submitFailed: PropTypes.bool,\n    submitSucceeded: PropTypes.bool,\n    touched: PropTypes.bool,\n    valid: PropTypes.bool,\n    visited: PropTypes.bool,\n  }),\n  label: PropTypes.node.isRequired,\n  children: PropTypes.node.isRequired,\n  hint: PropTypes.string,\n};\n\nexport default MultiChoice;\n"],"file":"index.js"}