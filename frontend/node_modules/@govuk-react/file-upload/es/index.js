var _styled;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import Label from '@govuk-react/label';
import LabelText from '@govuk-react/label-text';
import ErrorText from '@govuk-react/error-text';
import HintText from '@govuk-react/hint-text';
import { FONT_SIZE, LINE_HEIGHT, NTA_LIGHT, MEDIA_QUERIES } from '@govuk-react/constants';
var StyledInput = styled('input')((_styled = {
  boxSizing: 'border-box',
  fontFamily: NTA_LIGHT,
  WebkitFontSmoothing: 'antialiased',
  MozOsxFontSmoothing: 'grayscale',
  fontWeight: 400,
  textTransform: 'none',
  fontSize: FONT_SIZE.SIZE_14,
  lineHeight: LINE_HEIGHT.SIZE_14
}, _styled[MEDIA_QUERIES.LARGESCREEN] = {
  fontSize: FONT_SIZE.SIZE_16,
  lineHeight: LINE_HEIGHT.SIZE_16,
  width: '50%'
}, _styled.width = '100%', _styled.padding = '5px 4px 4px', _styled));
/**
 *
 * ### Usage
 *
 * Simple
 * ```jsx
 * <FileUpload name="group0">Upload a document</FileUpload>
 * ```
 *
 * Input with hint text
 * ```jsx
 * <FileUpload
 *   name="group1"
 *   acceptedFormats=".jpg, .png"
 *   hint={['This can be in either JPG or PNG format']}
 * >
 *   Upload a photo
 * </FileUpload>
 * ```
 *
 * Input with hint text & error
 * ```jsx
 * const meta = {
 *   touched: true,
 *   error: 'Example',
 * };
 *
 * <FileUpload
 *   name="group1"
 *   acceptedFormats=".jpg, .png"
 *   hint={['This can be in either JPG or PNG format']}
 *   meta={meta}
 * >
 *   Upload a photo
 * </FileUpload>
 * ```
 *
 * ### References:
 * - https://github.com/alphagov/govuk-frontend/tree/master/src/components/file-upload
 *
 */

var FileUpload = function FileUpload(_ref) {
  var meta = _ref.meta,
      children = _ref.children,
      hint = _ref.hint,
      acceptedFormats = _ref.acceptedFormats,
      props = _objectWithoutPropertiesLoose(_ref, ["meta", "children", "hint", "acceptedFormats"]);

  return React.createElement(Label, _extends({}, props, {
    error: meta.touched && meta.error
  }), React.createElement(LabelText, {
    error: meta.error
  }, children), hint && React.createElement(HintText, null, hint), meta.touched && meta.error && React.createElement(ErrorText, null, meta.error), React.createElement(StyledInput, {
    type: "file",
    accept: acceptedFormats,
    error: meta.error
  }));
};

FileUpload.defaultProps = {
  hint: undefined,
  meta: {},
  acceptedFormats: undefined
};
export default FileUpload;
//# sourceMappingURL=index.js.map